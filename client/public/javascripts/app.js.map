{"version":3,"sources":["app/application.coffee","app/collections/tracks_list.coffee","app/collections/upload_queue.coffee","app/initialize.coffee","app/lib/app_helpers.coffee","app/lib/base_view.coffee","app/lib/view_collection.coffee","app/locales/en.coffee","app/locales/fr.coffee","app/models/track.coffee","app/router.coffee","app/views/app_view.coffee","app/views/context_menu.coffee","app/views/left_menu.coffee","app/views/player_screen.coffee","app/views/templates/context_menu.jade","app/views/templates/home.jade","app/views/templates/left_menu.jade","app/views/templates/player_screen.jade","app/views/templates/tracks_screen.jade","app/views/tracks_screen.coffee"],"names":[],"mappings":"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CAAU,QAAQ,2BAAR,CAAV;;AAAA,yBACA,UAAS,KADT;;AAAA,yBAEA,YAAW,eAFX;;sBAAA;;GAFwC,SAL5C;;;CCZA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;;ACYA;EAAA;iSAAA;;AAAA,WAAW,QAAQ,kBAAR,CAAX;;AAAA,MAKM,CAAC,OAAP,GAAuB;AAEnB;;;;GAAA;;AAAA,oCAAU,QAAQ,2BAAR,CAAV;;AAAA,yBACA,UAAS,KADT;;AAAA,yBAEA,YAAW,eAFX;;sBAAA;;GAFwC,SAL5C","file":"public/javascripts/app.js","sourcesContent":["# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    application.coffee                                 :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:38 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/19 03:26:02 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nmodule.exports =\n\n    initialize: ->\n        # Create a shortcut\n        window.app = @\n\n\n        # Used in inter-app communication\n        #SocketListener = require '../lib/socket_listener'\n\n        # Routing management\n        Router = require 'router'\n        @router = new Router()\n        Backbone.history.start()\n\n        # Makes this object immuable.\n        Object.freeze this if typeof Object.freeze is 'function'\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    tracks_list.coffee                                 :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 18:42:03 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/19 05:36:11 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nTrack = require './../models/track'\n\nmodule.exports = class TracksList extends Backbone.Collection\n    model: Track\n\n\n    # Returns an existing model if a track with a similar id or a similar\n    # tack is already in the queue.\n    isTrackStored: (model) ->\n\n        # first check by id\n        existingTrack = @get model.get('id')\n\n        # TODO: make the comparisons\n\n        return existingTrack or null\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    upload_queue.coffee                                :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 23:50:03 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/20 15:12:57 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nTrack = require './../models/track'\n\nmodule.exports = class UploadQueue\n    model: Track\n\n    # number of tracks actually loaded\n    loaded: 0\n\n    # TODO: Catch event \"badFileType\" and prompt an error\n    # TODO: Catch event \"upload-complete\"\n    # TODO: Catch event \"metaDataError\"\n\n    constructor: (@baseCollection) ->\n\n        # Create a collection for elements to be processed by the queue. This\n        # information is not based on the base collection for performance\n        # reasons (it doesn't have to be updated each time a big folder is\n        # loaded.)\n        @uploadCollection = new Backbone.Collection()\n\n        # Backbone.Events is a mixin, not a \"class\" you can extend.\n        _.extend @, Backbone.Events\n\n        @asyncQueue = async.queue @uploadWorker, 5\n        @asyncQueue.drain = @completeUpload.bind @\n\n\n    addBlobs: (blobs) ->\n        #@reset if @completed // not implemented\n\n        i = 0\n        # Non blocking loop, handling one file every 2ms so the UI don't get\n        # stuck\n        do nonBlockingLoop = =>\n            return unless blob = blobs[i++]\n\n            # Check if the client have send a good format\n            # TODO: Later check if it's a picture to get the covert\n            if not blob.type.match /audio\\/(mp3|mpeg)/ #list of supported filetype\n                @trigger 'badFileType'\n            else\n                @retrieveMetaDataBlob blob, (model) =>\n                    # Check if a same track is already stored in the base collection\n                    if (existingModel = @isTrackStored(model)?)\n                        # Check if the track is in upload process or if it's already\n                        # successfully added\n                        if not existingModel.inUploadCycle() or existingModel.isUploaded()\n                            # update data\n                            existingModel.set\n                                size: blob.size\n                                lastModification: blob.lastModifiedDate\n\n                            existingModel.track = blob\n                            existingModel.loaded = 0\n                            existingModel.total = blob.size\n\n                            model = existingModel\n\n                            model.markAsConflict()\n                            @trigger 'conflict', model\n                        else\n                            # Prevent the track from being added to the queue.\n                            model = null\n                    if model?\n                        @add model\n\n                setTimeout nonBlockingLoop, 2\n\n\n    # Retrieve all data needed in the metadata and the ID3 metadata\n    # What is ID3 ?? -> https://en.wikipedia.org/wiki/ID3\n    # TODO: Improve the ID3 reader\n    # TODO: parse title -> take the ID3 title usualy much better\n    # TODO: retrieve album picture -> will be complicate because that need an\n    # inter app protocole with file and/or picture app\n    # TODO: There is lot's of other data to retrieve, may be interesting to look\n    # up\n    retrieveMetaDataBlob: (blob, callback) ->\n\n        model = new Track\n            title: blob.name\n            lastModification: blob.lastModifiedDate\n            size: blob.size\n            docType: blob.type\n\n        model.track = blob\n        model.load = 0\n        model.total = blob.size\n\n        reader = new FileReader()\n        reader.onload = (event) ->\n            ID3.loadTags blob.name, ( ->\n                tags = ID3.getAllTags blob.name\n                model.set\n                    title: if tags.title? then tags.title else model.title\n                    artist: if tags.artist? then tags.artist else undefined\n                    album: if tags.album? then tags.album else undefined\n                    trackNb: if tags.track? then tags.track else undefined\n                    year: if tags.year? then tags.year else undefined\n                    genre: if tags.genre? then tags.genre else undefined\n                    time: if tags.TLEN?.data? then tags.TLEN.data else undefined\n                callback(model)\n            ),\n            tags: [\"title\",\"artist\",\"album\",\"track\",\"year\",\"genre\",\"TLEN\"]\n            dataReader: FileAPIReader blob\n        reader.readAsArrayBuffer blob\n        reader.onabort = (event) ->\n            @trigger 'metaDataError'\n            callback(model)\n\n\n    # Add a to the operations in progress, change his status and\n    # push it in the queue\n    add: (model) ->\n        window.pendingOperations.upload++ # set in initialize.coffee\n\n        # don't override conflict status\n        model.markAsUploading() unless model.isConflict()\n\n        # Add to the base collection to print it\n        @baseCollection.add model\n\n        # Add to the upload collection so it can be precessed\n        @uploadCollection.add model\n\n        # Push it at the end of the queue\n        @asyncQueue.push model\n\n\n    # Perform the actual persistence by saving the model and changing\n    # uploadStatus based on response. If there is an unexpected error,\n    # it tries again 3 times before failing.\n    _processSave: (model, done) ->\n        if not model.isErrored() and not model.isConflict()\n            model.save null,\n                success: (model) =>\n                    model.track = null\n                    # Make sure progress is uniform, we force it a 100%\n                    model.loaded = model.total\n                    model.markAsUploaded()\n                    done null\n                error: (_, err) =>\n                    model.track = null\n                    body = try JSON.parse(err.responseText)\n                    catch e then msg: null\n                    if err.status is 400 and body.code is 'ESTORAGE'\n                        model.markAsErrored body\n                    else if err.status is 0 and err.statusText is 'error'\n                        # abort by user, don't try again\n\n                    # Retry if an unexpected error occurs\n                    else\n                        model.tries = 1 + (model.tries or 0)\n                        if model.tries > 3\n                            defaultMessage = \"modal error track upload\"\n                            model.error = t err.msg or defaultMessage\n                            errorKey = err.msg or defaultMessage\n                            error = t errorKey\n                            model.markAsErrored error\n                        else\n                            # let's try again\n                            @asyncQueue.push model\n                #done()\n        else\n            done()\n\n\n    # Process each element in the queue\n       uploadWorker: (model, next) =>\n        # Skip if there is an error.\n        if model.error\n            setTimeout next, 10\n\n        # If there is a conflict, the queue waits for the user to\n        # make a decision.\n        # Not implemented yep\n        else if model.isConflict()\n            alert 'CONFLICT'\n        # Otherwise, the upload starts directly.\n        else\n            @_processSave model, next\n\n\n    # Reset variables and trigger completion events.\n    completeUpload: =>\n        window.pendingOperations.upload = 0\n        @completed = true\n        @trigger 'upload-complete'\n\n\n    # Returns an existing model if a track with a similar id or a similar\n    # location (path + name) is already in the queue.\n    isTrackStored: (model) ->\n        return @baseCollection.isTrackStored model\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    initialize.coffee                                  :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:35 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/19 03:32:20 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\napp = require 'application'\nTracksList = require './collections/tracks_list'\nUploadQueue = require './collections/upload_queue'\n\n\n# The function called from index.html\n$ ->\n    require 'lib/app_helpers'\n\n    ######## Initialize Polyglot ############\n    # Based on cozy-contact\n    @locale = window.locale\n    delete window.locale\n\n    @polyglot = new Polyglot()\n\n    try\n        locales = require \"locales/\" + @locale\n    catch err\n        locales = require 'locales/en'\n\n    # we give polyglot the data\n    @polyglot.extend @locales\n\n    # handy shortcut\n    window.t = @polyglot.t.bind @polyglot\n    ######## END - Initialize Polyglot - END ############\n\n\n    # Keep count of the operations in progress\n    window.pendingOperations =\n        upload: 0\n\n    # mainTracksList is the main collection where all the tracks are stored, all\n    # the others list must have only a reference to a track of this list\n    window.mainTracksList = new TracksList\n    # uploadQueue is the list of track waiting to be uploaded. The tracks in\n    # uploadQueue are also added to the mainTrackList to be printed.\n    window.uploadQueue = new UploadQueue window.mainTracksList\n\n    app.initialize()\n","(->\n    # IIFE to avoid collisions with other variables\n    (->\n        # Make it safe to do console.log() always.\n        console = window.console = window.console or {}\n        method = undefined\n        dummy = ->\n        methods = ('assert,count,debug,dir,dirxml,error,exception,\n                   group,groupCollapsed,groupEnd,info,log,markTimeline,\n                   profile,profileEnd,time,timeEnd,trace,warn').split ','\n\n        console[method] = console[method] or dummy while method = methods.pop()\n    )()\n)()\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    base_view.coffee                                   :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:31:15 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/19 01:21:04 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nmodule.exports = class BaseView extends Backbone.View\n\n    template: ->\n\n    initialize: ->\n\n    getRenderData: ->\n        model: @model?.toJSON()\n\n    render: ->\n        @beforeRender()\n        @$el.html @template(@getRenderData())\n        @afterRender()\n        @\n\n    beforeRender: ->\n\n    afterRender: ->\n\n    destroy: ->\n        @undelegateEvents()\n        @$el.removeData().unbind()\n        @remove()\n        Backbone.View::remove.call @\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    view_collection.coffee                             :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:31:19 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/18 15:31:21 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require 'lib/base_view'\n\n# View that display a collection of subitems\n# used to DRY views\n# Usage : new ViewCollection(collection:collection)\n# Automatically populate itself by creating a itemView for each item\n# in its collection\n\n# can use a template that will be displayed alongside the itemViews\n\n# itemView       : the Backbone.View to be used for items\n# itemViewOptions : the options that will be passed to itemViews\n# collectionEl : the DOM element's selector where the itemViews will\n#                be displayed. Automatically falls back to el if null\n\nmodule.exports = class ViewCollection extends BaseView\n\n    itemview: null\n\n    views: {}\n\n    template: -> ''\n\n    itemViewOptions: ->\n\n    collectionEl: null\n\n    # add 'empty' class to view when there is no subview\n    onChange: ->\n        @$el.toggleClass 'empty', _.size(@views) is 0\n\n    # can be overriden if we want to place the subviews somewhere else\n    appendView: (view) ->\n        @$collectionEl.append view.el\n\n    # bind listeners to the collection\n    initialize: ->\n        super\n        @views = {}\n        @listenTo @collection, \"reset\",   @onReset\n        @listenTo @collection, \"add\",     @addItem\n        @listenTo @collection, \"remove\",  @removeItem\n\n        if not @collectionEl?\n            collectionEl = el\n\n    # if we have views before a render call, we detach them\n    render: ->\n        view.$el.detach() for id, view of @views\n        super\n\n    # after render, we reattach the views\n    afterRender: ->\n        @$collectionEl = $(@collectionEl)\n        @appendView view.$el for id, view of @views\n        @onReset @collection\n        @onChange @views\n\n    # destroy all sub views before remove\n    remove: ->\n        @onReset []\n        super\n\n    # event listener for reset\n    onReset: (newcollection) ->\n        view.remove() for id, view of @views\n        newcollection.forEach @addItem\n\n    # event listeners for add\n    addItem: (model) =>\n        options = _.extend {}, {model: model}, @itemViewOptions(model)\n        view = new @itemview(options)\n        @views[model.cid] = view.render()\n        @appendView view\n        @onChange @views\n\n    # event listeners for remove\n    removeItem: (model) =>\n        @views[model.cid].remove()\n        delete @views[model.cid]\n\n        @onChange @views\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    en.coffee                                          :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 19:41:10 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/18 23:04:32 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nmodule.exports =\n    'upload-files'            : 'Upload'\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    fr.coffee                                          :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 19:45:08 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/18 23:04:28 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\n\nmodule.exports =\n    'upload-files'            : 'Upload'\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    track.coffee                                       :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 22:06:02 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/20 15:11:37 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nmodule.exports = class Track extends Backbone.Model\n    url: 'track'\n\n    #TODO: handle event 'change'\n\n\n    # Local state. Handled through `markAs*` and `is*` methods.\n    uploadStatus: null\n\n    # Local stat. Handled throught nothing for the moment\n    error: null\n\n    # Valid values for `uploadStatus`.\n    # Check if conflic must be handled\n    @VALID_STATUSES: [null, 'uploading', 'uploaded', 'errored']#, 'conflict']\n\n    ###\n    # Getters for the local state.\n    ###\n    isUploading: -> return @uploadStatus is 'uploading'\n    isUploaded: -> return @uploadStatus is 'uploaded'\n    isErrored: -> return @uploadStatus is 'errored'\n    isConflict: -> return @uploadStatus is 'conflict'\n\n    ###\n    # Setters for the local state. Semantic wrapper for _setUploadStatus.\n    ###\n    markAsUploading: -> @_setUploadStatus 'uploading'\n    markAsUploaded: -> @_setUploadStatus 'uploaded'\n    markAsConflict: -> @_setUploadStatus 'conflict'\n    markAsErrored: (error) -> @_setUploadStatus 'errored', error\n\n\n    ###\n        Trigger change for each status update because Backbone only triggers\n        `change` events for model's attributes.\n        The `change` events allow the projection to be updated.\n        @param `status` must be in Track.VALID_STATUSES\n    ###\n    _setUploadStatus: (status, error = null) ->\n        if status not in Track.VALID_STATUSES\n            message = \"Invalid upload status #{status} not \" + \\\n                      \"in #{Track.VALID_STATUSES}\"\n            throw new Error message\n        else\n            @error = error\n            @uploadStatus = status\n            @trigger 'change', @\n\n    # Returns an existing model if a track with a similar id or a similar\n    # tack is already in the queue.\n    isTrackStored: (model) ->\n\n        # first check by id\n        existingTrack = @get model.get('id')\n\n        # TODO: make the comparisons\n\n        return existingTrack or null\n\n    # Overrides sync method to allow track upload (multipart request)\n    # and progress events call with save methode\n    sync: (method, model, options) =>\n\n\n        # this is a new model, let's upload it as a multipart\n        if model.track\n\n            # if the track is being overwritten (update), we force\n            # the \"create\" method, since only the \"create\" action in the server\n            # can handle track upload.\n            method = 'create'\n            @id = \"\"\n\n            formdata = new FormData()\n            formdata.append 'title', model.get 'title'\n            formdata.append 'artist', model.get 'artist'\n            formdata.append 'album', model.get 'album'\n            formdata.append 'trackNb', model.get 'trackNb'\n            formdata.append 'year', model.get 'year'\n            formdata.append 'genre', model.get 'genre'\n            formdata.append 'time', model.get 'time'\n            formdata.append 'docType', model.get 'docType'\n            formdata.append 'lastModification', model.get 'lastModification'\n            formdata.append 'overwrite', true if @overwrite\n            formdata.append 'track', model.track\n\n            # trigger upload progress on the model\n            progress = (e) ->\n                model.loaded = e.loaded\n                model.trigger 'progress', e\n\n            _.extend options,\n                contentType: false\n                data: formdata\n                # patch Model.sync so it could trigger progress event\n                xhr: =>\n                    xhr = $.ajaxSettings.xhr()\n                    if xhr.upload\n                        xhr.upload.addEventListener 'progress', progress, false\n                        @uploadXhrRequest = xhr\n                    xhr\n\n        Backbone.sync.apply @, arguments\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    router.coffee                                      :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:33 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/18 19:29:52 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nAppView = require 'views/app_view'\n\nmodule.exports = class Router extends Backbone.Router\n\n    routes:\n        '': 'main'\n\n    initialize: ->\n\n    main: ->\n        mainView = new AppView()\n        mainView.render()\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    app_view.coffee                                    :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:07 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/18 22:30:07 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../lib/base_view'\nContextMenu = require './context_menu'\nLeftMenu = require './left_menu'\nTracksScreen = require './tracks_screen'\nPlayerScreen = require './player_screen'\n\nmodule.exports = class AppView extends BaseView\n\n    el: 'body.application'\n    template: require('./templates/home')\n\n    afterRender: ->\n        # Create and render the context menu\n        @contextMenu = new ContextMenu\n        @$('#context-menu').append @contextMenu.$el\n        @contextMenu.render()\n\n        # Create and render the left menu\n        @leftMenu = new LeftMenu\n        @$('#left-menu').append @leftMenu.$el\n        @leftMenu.render()\n\n        # Create and render the tracks screen\n        @tracksScreen = new TracksScreen\n        @$('#tracks-screen').append @tracksScreen.$el\n        @tracksScreen.render()\n\n        # Create and render the player screen\n        @playerScreen = new PlayerScreen\n        @$('#player-screen').append @playerScreen.$el\n        @playerScreen.render()\n\n        console.log \"write more code here !\"\n\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    context_menu.coffee                                :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:42 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/19 03:26:29 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../lib/base_view'\n\n# Context_menu represent the menu on the top of the app. His goal is to work\n# with tracks_screen. It must display the dynamiques option when the user select\n# one or several song in the tracks screen.\nmodule.exports = class ContextMenu extends BaseView\n\n    template: require('./templates/context_menu')\n    tagName: 'div'\n    className: 'context-menu'\n\n    events:\n        # Event trigger when a user valid the files to upload\n        'change #upload-files': 'lauchUploadFiles'\n\n    afterRender: ->\n        @uploader = $('#uploader')\n\n    ################## UPLOAD #########################\n\n    # Catche all files in the event and send them to the uploadQueue collection\n    lauchUploadFiles: (event) ->\n        files = event.dataTransfert?.files or event.target.files\n        # Debug log ###############################\n        #\n        #console.log 'Files to upload:'\n        #console.log file for file in files\n        #\n        ##########################################\n        if files.length\n            window.uploadQueue.addBlobs files\n\n            if event.target?\n                target = $ event.target\n                target.replaceWith target.clone true\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    left_menu.coffee                                   :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:40 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/18 15:50:38 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../lib/base_view'\n\n# Context_menu represent the menu on the top of the app. His goal is to work\n# with tracks_screen. It must display the dynamiques option when the user select\n# one or several song in the tracks screen.\nmodule.exports = class LeftMenu extends BaseView\n\n    template: require('./templates/left_menu')\n    tagName: 'div'\n    className: 'left-menu'\n\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    player_screen.coffee                               :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:58:59 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/18 15:59:26 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../lib/base_view'\n\n# Context_menu represent the menu on the top of the app. His goal is to work\n# with tracks_screen. It must display the dynamiques option when the user select\n# one or several song in the tracks screen.\nmodule.exports = class PlayerScreen extends BaseView\n\n    template: require('./templates/player_screen')\n    tagName: 'div'\n    className: 'player-screen'\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div id=\\\"file-manager\\\" class=\\\"btn-group\\\"><input id=\\\"upload-files\\\" name=\\\"upload-files\\\" type=\\\"file\\\" multiple=\\\"multiple\\\" accept=\\\"audio/*\\\" class=\\\"btn btn-default\\\"/></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div id=\\\"context-menu\\\" class=\\\"navbar navbar-fixed-top\\\"></div><div class=\\\"container-fluid\\\"><div class=\\\"row-fluid columns content\\\"><div class=\\\"row\\\"><div id=\\\"left-menu\\\" class=\\\"col-sm-3 col-md-2 left-menu\\\"></div><div id=\\\"tracks-screen\\\" class=\\\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2\\\"></div></div></div></div><div id=\\\"player-screen\\\" class=\\\"footer player\\\"></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div class=\\\"demo-content-left\\\"><h1>Left menu</h1><p>content</p><p>content</p><p>content</p><p>content</p><p>content</p><p>content</p></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div class=\\\"demo-content-player\\\"><h1>Player screen</h1></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div class=\\\"demo-content-tracks\\\"><h1>Tracks Screen</h1><p>content</p><p>content</p><p>content</p><p>content</p><p>content</p><p>content</p><p>content</p></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    tracks_screen.coffee                               :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:47:51 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/18 15:54:59 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../lib/base_view'\n\n# Context_menu represent the menu on the top of the app. His goal is to work\n# with tracks_screen. It must display the dynamiques option when the user select\n# one or several song in the tracks screen.\nmodule.exports = class TracksScreen extends BaseView\n\n    template: require('./templates/tracks_screen')\n    tagName: 'div'\n    className: 'tracks-screen'\n"]}