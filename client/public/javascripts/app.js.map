{"version":3,"sources":["app/application.coffee","app/collections/album_list.coffee","app/collections/playlist_items.coffee","app/collections/playlists_list.coffee","app/collections/selection_list.coffee","app/collections/tracks_list.coffee","app/collections/upload_queue.coffee","app/initialize.coffee","app/lib/app_helpers.coffee","app/lib/base_view.coffee","app/lib/view_collection.coffee","app/locales/en.coffee","app/locales/fr.coffee","app/models/album.coffee","app/models/content_manager.coffee","app/models/menu_manager.coffee","app/models/playlist.coffee","app/models/track.coffee","app/router.coffee","app/views/app_view.coffee","app/views/content/all_tracks_screen.coffee","app/views/content/edition_screen.coffee","app/views/content/playlist_screen.coffee","app/views/content/skeletons/all_tracks_skel.jade","app/views/content/skeletons/edition_skel.jade","app/views/content/skeletons/playlist_skel.jade","app/views/content/templates/edition.jade","app/views/content/templates/menu_list.jade","app/views/content/templates/menu_row.jade","app/views/content/templates/playlist.jade","app/views/content/templates/track_row.jade","app/views/content/templates/tracks_list.jade","app/views/content/templates/tracks_menu.jade","app/views/content/views/edition_view.coffee","app/views/content/views/menu_list_view.coffee","app/views/content/views/menu_row_view.coffee","app/views/content/views/playlist_view.coffee","app/views/content/views/tracks_list_view.coffee","app/views/content/views/tracks_menu_view.coffee","app/views/content/views/tracks_row_view.coffee","app/views/menu/menu_view.coffee","app/views/menu/playlist/playlists_list_view.coffee","app/views/menu/playlist/playlists_row_view.coffee","app/views/menu/playlist/templates/playlist.jade","app/views/menu/playlist/templates/playlists.jade","app/views/menu/templates/menu_screen.jade","app/views/player_screen.coffee","app/views/templates/home.jade","app/views/templates/player_screen.jade"],"names":[],"mappings":"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ADA;WAEA,IAAC,MAAK,CAAC,MAAP,CAAc,IAAC,OAAM,CAAC,EAAtB,EAHI;EAAA,CA7BR;;AAAA,2BAkCA,SAAQ;AACJ,QAAC,OAAM,CAAC,GAAG,CAAC,MAAZ;WACA,IAAC,OAAM,CAAC,GAAG,CAAC,MAAZ,GAFI;EAAA,CAlCR;;wBAAA;;IALJ;;;CCZA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3EA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"public/javascripts/app.js","sourcesContent":["# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    application.coffee                                 :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:38 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/09 12:10:33 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nAppView = require './views/app_view'\nTracksList = require './collections/tracks_list'\nUploadQueue = require './collections/upload_queue'\nAlbumList = require './collections/album_list'\nPlaylistList = require './collections/playlists_list'\n\n###\n# Represent the app, all global variables must be set in it and not in window\n###\nmodule.exports =\n\n    initialize: ->\n\n        # Create a shortcut\n        window.app = @\n\n        @albumCollection = new AlbumList\n\n        # BaseCollection is the main collection where all the tracks are stored, all\n        # the others list must have only a reference to a track of this list\n        @baseCollection = new TracksList\n\n        @playlistsCollection = new PlaylistList\n        @playlistsCollection.fetch()\n\n        # Print the main structure\n        mainView = new AppView\n        mainView.render()\n\n        # Routing management\n        Router = require 'router'\n        @router = new Router()\n        Backbone.history.start()\n\n        # uploadQueue is the list of track waiting to be uploaded. The tracks in\n        # uploadQueue are also added to the mainTrackList to be printed.\n        @uploadQueue = new UploadQueue @baseCollection\n\n        # Makes this object immuable.\n        Object.freeze this if typeof Object.freeze is 'function'\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    album_list.coffee                                  :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/02 11:16:41 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/09 20:05:51 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nAlbum = require '../models/album'\n\nmodule.exports = class AlbumList extends Backbone.Collection\n    url: 'album'\n    model: Album\n\n    @ATTRIBUTES: ['name', 'genre', 'year', 'artist', 'feat']\n\n\n    initialize: ->\n        @albumQueue = async.queue @upload, 1\n\n\n    fetchAlbumByName: (albumName, callback) =>\n        $.ajax\n            url: \"album/name/#{albumName}\"\n            type: 'GET'\n            error: (error) =>\n                callback error\n            success: (album) =>\n                @add album\n                callback null, @get(album.id)\n\n    fetchAlbumById: (albumId, callback) ->\n        $.ajax\n            url: \"album/#{albumId}\"\n            type: 'GET'\n            error: (error) ->\n                callback error\n            success: (album) =>\n                @add album\n                callback null, @get(album.id)\n\n    createAlbum: (model, callback) ->\n        album = new Album\n            name: model.get 'album'\n            artist: model.get 'artist'\n            year: model.get 'year'\n            genre: model.get 'genre'\n        @.sync 'create', album,\n            error: (res) ->\n                console.error error\n            success: (newAlbum) =>\n                @add newAlbum\n                model.unset 'artist', 'silent'\n                model.unset 'year', 'silent'\n                model.unset 'genre', 'silent'\n                model.set 'album', newAlbum.id\n                callback null, model\n\n\n    checkRemoteAlbum: (model, callback) ->\n        @fetchAlbumByName model.get('album'), (err, album) =>\n            return console.error err if err\n            if album?.name\n                @add album\n                album = @get album.id\n                track = @mergeDataAlbum album, model\n                callback null, track\n            else\n                @createAlbum model, callback\n\n\n    mergeDataAlbum: (album, model) ->\n        AlbumList.ATTRIBUTES.forEach (elem) ->\n            elemModel = model.get elem\n            elemAlbum = album.get elem\n            if elemModel?\n                if elemModel == elemAlbum\n                    model.unset elem, 'silent'\n                else if not elemAlbum?\n                    elemAlbum = elemModel\n                    model.unset elem, 'silent'\n        # else the track attribute is differente of album same\n        # attribute we keep it in the track and that will overprint the\n        # album data\n        model.set 'album', album.id\n        model\n\n\n    addTrackToAlbum: (track, callback) ->\n        album = @get track.get('album')\n        tracks = album.get 'tracks'\n        tracks.push track.id\n        #TODO: make a specifique request for adding a track, too much potential\n        #shit could be update with this way\n        album.sync 'update', album,\n            error: (xhr) ->\n                console.error 'ERROR: ', xhr\n\n\n    lauchTrackUpload: (track) ->\n        window.app.uploadQueue.trackQueue.push track\n        # Add to the upload collection so it can be processed\n        #window.app.uploadQueue.uploadCollection.add track\n\n\n    upload: (model, next) =>\n        album = @findWhere\n            name: model.get 'album'\n        if not album?\n            @checkRemoteAlbum model, (err, track) =>\n                return console.error err if err\n                @lauchTrackUpload track\n                next()\n        else\n            track = @mergeDataAlbum album, model\n            @lauchTrackUpload track\n            next()\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    playlist.coffee                                    :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/26 19:48:45 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 14:11:47 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nTrack = require '../models/track'\n\nmodule.exports = class PlaylistItems extends Backbone.Collection\n    url: 'playlist'\n    model: Track\n\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    playlists_list.coffee                              :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/26 17:16:29 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 11:58:59 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nPlaylist = require '../models/playlist'\n\nmodule.exports = class PlaylistList extends Backbone.Collection\n\n    model: Playlist\n    url: 'playlist-list'\n\n\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    selection_list.coffee                              :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/08 23:06:43 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 14:31:33 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nTrack = require './../models/track'\n\n###\n# SelectedList is a collection of Track model selected by the user. This Tracks\n# are references to Tracks models contains in the Base collection. So all action\n# on tracks must be handle by this list which update the Base Collection and the\n# view.It's the same collection for all content screen (playlist/all tracks/etc...)\n# which is refresh.\n###\nmodule.exports = class SelectionList extends Backbone.Collection\n    model: Track\n    url: 'tracks'\n\n\n    initialize: ->\n        super\n        # Create a shortcute for each track view can access to the selected\n        # tracks list to trigger an event when they are selected\n        window.selection = @\n\n    emptySelection: ->\n        loop\n            break if @length == 0\n            @pop()\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    tracks_list.coffee                                 :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 18:42:03 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 19:44:58 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nTrack = require './../models/track'\n\n###\n# Represents a collection of tracks\n# It acts as a cache when instanciate as the baseCollection\n# The base collection holds ALL tracks of the application\n###\nmodule.exports = class TracksList extends Backbone.Collection\n    model: Track\n    url: 'track'\n\n    # Number of tracks downloaded to each call of fetch\n    sizeFrameDownload: 5\n\n    # Set the number of tracks downloaded, each call of fetch will increment it\n    # by sizeFrameDownload\n    cursorFrameDownload: 0\n\n\n    # Returns an existing model if a track with a similar id or a similar\n    # tack is already in the queue.\n    isTrackStored: (model) ->\n        # first check by id\n        existingTrack = @get model.get('id')\n        # TODO: make the comparisons\n        return existingTrack or null\n\n    getAlbumId: (model) ->\n        if model instanceof Track\n            model.get 'album'\n        else\n            model.album\n\n\n    setAlbum: (model, album, options, callback) ->\n        allOptions = _.extend({add: true, remove: false, silent: true}, options)\n        model = @set model, allOptions\n        model.album = album\n        if not (options?.silent == true)\n            @trigger 'add', model\n        if callback?\n            callback model\n\n\n    newWorker: (albumId, queue, options, callback) ->\n        window.app.albumCollection.fetchAlbumById albumId, (err, album) =>\n            return console.error err if err\n            queue.forEach (model) =>\n                @setAlbum model, album, options, callback\n\n\n    add: (models, options, callback) ->\n        if !_.isArray(models)\n            models = [models]\n\n        loop\n            break if models.length == 0\n            model = models.pop()\n            if not (model.id? and @get(model.id))\n                albumId = @getAlbumId(model)\n                album = window.app.albumCollection.get albumId\n                if not album?\n                    newQueue = []\n                    newQueue.push model\n                    models.forEach (modelQueue) =>\n                        if albumId == @getAlbumId(modelQueue)\n                            newQueue.push models.splice(models.indexOf(modelQueue), 1)[0]\n                    @newWorker albumId, newQueue, options, callback\n                else\n                    @setAlbum model, album, options, callback\n\n\n    removeTrackFromPlaylists: (model) =>\n        listIds = model.get 'playlistsId'\n        listPlaylists = window.app.playlistsCollection\n\n        index = 0\n        loop\n            break if index >= listIds.length\n            playlist = listPlaylists.get listIds[index]\n            playlist.removeTrackIds model.id\n            index++\n\n    remove: (models, options) ->\n\n        if !_.isArray(models)\n            models = [models]\n\n        index = 0\n        loop\n            break if index >= models.length\n            @removeTrackFromPlaylists models[index]\n            ret = super models[index], options\n            ret.destroy\n                url: \"track/#{ret.id}\"\n            index++\n\n\n    removeTracksFromSelection: =>\n        selection = window.selection\n        loop\n            break if selection.length == 0\n            model = selection.pop()\n            @remove model\n\n\n    # Change to fetch data by range, it ask the server to retrieve the number of\n    # tracks set in sizeFrameDownload from cursorFrameDownload and in case of\n    # success add the number of tracks retrieved to cursorFramDownload\n    fetch: ->\n        $.ajax\n            url: \"track/#{@cursorFrameDownload}/#{@sizeFrameDownload}\"\n            type: 'GET'\n            error: (xhr) ->\n                console.error xhr\n            success: (data) =>\n                @cursorFrameDownload += data.length\n                @add data\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    upload_queue.coffee                                :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 23:50:03 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/09 22:57:52 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nTrack = require './../models/track'\napp = require './../application'\n\n###\n# The UploadQueue is a mix of async.queue & BackboneCollection\n# - Blobs are parsed and added to the queue and the base collection with the flag\n# uploading\n###\nmodule.exports = class UploadQueue\n    model: Track\n\n    # number of tracks actually loaded\n    loaded: 0\n\n    # TODO: Catch event \"badFileType\" and prompt an error\n    # TODO: Catch event \"upload-complete\"\n    # TODO: Catch event \"metaDataError\"\n\n\n    @ATTRIBUTES: [\"title\",\"artist\",\"album\",\"track\",\"year\",\"genre\",\"TLEN\"]\n\n    constructor: (@baseCollection) ->\n\n        # Create a collection for elements to be processed by the queue. This\n        # information is not based on the base collection for performance\n        # reasons (it doesn't have to be updated each time a big folder is\n        # loaded.)\n        #@uploadCollection = new Backbone.Collection()\n\n        # Backbone.Events is a mixin, not a \"class\" you can extend.\n        _.extend @, Backbone.Events\n\n        @trackQueue = async.queue @uploadTrackWorker, 5\n        @trackQueue.drain = @completeUpload.bind @\n\n\n\n\n    addBlobs: (blobs) ->\n        #@reset if @completed // not implemented\n\n        i = 0\n        # Non blocking loop, handling one file every 2ms so the UI don't get\n        # stuck\n        do nonBlockingLoop = =>\n            return unless blob = blobs[i++]\n\n            # Check if the client have send a good format\n            # TODO: Later check if it's a picture to get the covert\n            if not blob.type.match /audio\\/(mp3|mpeg)/ #list of supported filetype\n                @trigger 'badFileType'\n                console.log blob.name, ' => BadFileType'\n            else\n                @retrieveMetaDataBlob blob, (model) =>\n                    # Check if a same track is already stored in the base collection\n                    if (existingModel = @isTrackStored(model)?)\n                        # Check if the track is in upload process or if it's already\n                        # successfully added\n                        if not existingModel.inUploadCycle() or existingModel.isUploaded()\n                            # update data\n                            existingModel.set\n                                size: blob.size\n                                lastModification: blob.lastModifiedDate\n\n                            existingModel.track = blob\n                            existingModel.loaded = 0\n                            existingModel.total = blob.size\n\n                            model = existingModel\n\n                            model.markAsConflict()\n                            @trigger 'conflict', model\n                        else\n                            # Prevent the track from being added to the queue.\n                            model = null\n                    if model?\n                        @add model\n\n                setTimeout nonBlockingLoop, 2\n\n\n    # Retrieve all data needed in the metadata and the ID3 metadata\n    # What is ID3 ?? -> https://en.wikipedia.org/wiki/ID3\n    # TODO: Improve the ID3 reader\n    # TODO: parse title -> take the ID3 title usualy much better\n    # TODO: retrieve album picture -> will be complicate because that need an\n    # inter app protocole with file and/or picture app\n    # TODO: There is lot's of other data to retrieve, may be interesting to look\n    # up\n    retrieveMetaDataBlob: (blob, callback) ->\n\n        model = new Track\n            title: blob.name\n            lastModification: blob.lastModifiedDate\n            size: blob.size\n            docType: blob.type\n\n        model.track = blob\n        model.load = 0\n        model.total = blob.size\n\n        reader = new FileReader()\n        reader.onload = (event) ->\n            ID3.loadTags blob.name, ( ->\n                tags = ID3.getAllTags blob.name\n                console.log 'TAGS UPLOAD: ', tags\n                model.set\n                    title: if tags.title? then tags.title else model.title\n                    artist: if tags.artist? then tags.artist else undefined\n                    album: if tags.album? then tags.album else undefined\n                    trackNb: if tags.track? then tags.track else undefined\n                    year: if tags.year? then tags.year else undefined\n                    genre: if tags.genre? then tags.genre else undefined\n                    time: if tags.TLEN?.data? then tags.TLEN.data else undefined\n                callback(model)\n            ),\n            tags: UploadQueue.ATTRIBUTES\n            dataReader: FileAPIReader blob\n        reader.readAsArrayBuffer blob\n        reader.onabort = (event) ->\n            @trigger 'metaDataError'\n            callback(model)\n\n\n    # Add a to the operations in progress, change his status and\n    # push it in the queue\n    add: (model) ->\n        window.pendingOperations.upload++ # set in initialize.coffee\n\n        # don't override conflict status\n        model.markAsUploading() if not model.isConflict()\n\n        # Push it at the end of the queue\n        window.app.albumCollection.albumQueue.push model\n\n\n\n\n\n    # Perform the actual persistence by saving the model and changing\n    # uploadStatus based on response. If there is an unexpected error,\n    # it tries again 3 times before failing.\n    _processSave: (model, done) ->\n        if not model.isErrored() and not model.isConflict()\n            model.save null,\n                success: (model) =>\n                    window.app.albumCollection.addTrackToAlbum model\n                    # Make sure progress is uniform, we force it a 100%\n                    model.loaded = model.total\n                    model.markAsUploaded()\n                    done()\n                error: (_, err) =>\n                    model.track = null\n                    body = try JSON.parse(err.responseText)\n                    catch e then msg: null\n                    if err.status is 400 and body.code is 'ESTORAGE'\n                        model.markAsErrored body\n                    else if err.status is 0 and err.statusText is 'error'\n                        # abort by user, don't try again\n\n                    # Retry if an unexpected error occurs\n                    else\n                        model.tries = 1 + (model.tries or 0)\n                        if model.tries > 3\n                            defaultMessage = \"modal error track upload\"\n                            model.error = t err.msg or defaultMessage\n                            errorKey = err.msg or defaultMessage\n                            error = t errorKey\n                            model.markAsErrored error\n                        else\n                            # let's try again\n                            @trackQueue.push model\n            # Add to the base collection to print it\n            window.app.baseCollection.add model\n        else\n            done()\n\n\n    # Process each element in the queue\n    uploadTrackWorker: (model, next) =>\n        # Skip if there is an error.\n        if model.error\n            setTimeout next, 10\n\n        # Otherwise, the upload starts directly.\n        else\n            @_processSave model, next\n\n\n\n\n    # Reset variables and trigger completion events.\n    completeUpload: =>\n        window.pendingOperations.upload = 0\n        @completed = true\n        @trigger 'upload-complete'\n\n\n    # Returns an existing model if a track with a similar id or a similar\n    # location (path + name) is already in the queue.\n    isTrackStored: (model) ->\n        return @baseCollection.isTrackStored model\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    initialize.coffee                                  :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:35 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/24 18:47:52 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\napp = require 'application'\n\n# The function called from index.html\n$ ->\n    require 'lib/app_helpers'\n\n    ######## Initialize Polyglot ############\n    # Based on cozy-contact\n    @locale = window.locale\n    delete window.locale\n\n    @polyglot = new Polyglot()\n\n    try\n        locales = require \"locales/\" + @locale\n    catch err\n        locales = require 'locales/en'\n\n    # we give polyglot the data\n    @polyglot.extend @locales\n\n    # handy shortcut\n    window.t = @polyglot.t.bind @polyglot\n    ########## END - Initialize Polyglot - END ############\n\n\n    # Keep count of the operations in progress\n    window.pendingOperations =\n        upload: 0\n\n    app.initialize()\n","(->\n    # IIFE to avoid collisions with other variables\n    (->\n        # Make it safe to do console.log() always.\n        console = window.console = window.console or {}\n        method = undefined\n        dummy = ->\n        methods = ('assert,count,debug,dir,dirxml,error,exception,\n                   group,groupCollapsed,groupEnd,info,log,markTimeline,\n                   profile,profileEnd,time,timeEnd,trace,warn').split ','\n\n        console[method] = console[method] or dummy while method = methods.pop()\n    )()\n)()\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    base_view.coffee                                   :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:31:15 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/06 19:51:36 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nmodule.exports = class BaseView extends Backbone.View\n\n    template: ->\n\n    initialize: ->\n\n    getRenderData: ->\n        model: @model?.toJSON()\n\n    render: ->\n        @beforeRender()\n        @$el.html @template(@getRenderData())\n        @afterRender()\n        @\n\n    beforeRender: ->\n\n    afterRender: ->\n\n    destroy: ->\n        @undelegateEvents()\n        @$el.removeData().unbind()\n        @remove()\n        Backbone.View::remove.call @\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    view_collection.coffee                             :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:31:19 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 19:42:56 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require 'lib/base_view'\n\n# View that display a collection of subitems\n# used to DRY views\n# Usage : new ViewCollection(collection:collection)\n# Automatically populate itself by creating a itemView for each item\n# in its collection\n\n# can use a template that will be displayed alongside the itemViews\n\n# itemView       : the Backbone.View to be used for items\n# itemViewOptions : the options that will be passed to itemViews\n# collectionEl : the DOM element's selector where the itemViews will\n#                be displayed. Automatically falls back to el if null\n\nmodule.exports = class ViewCollection extends BaseView\n\n    itemview: null\n\n    #views: []\n    views: {}\n\n    template: -> ''\n\n    itemViewOptions: ->\n\n    collectionEl: null\n\n    # add 'empty' class to view when there is no subview\n    onChange: ->\n        @$el.toggleClass 'empty', _.size(@views) is 0\n\n    # can be overriden if we want to place the subviews somewhere else\n    appendView: (view) ->\n        @$collectionEl.append view.el\n\n    # bind listeners to the collection\n    initialize: ->\n        super\n        @listenTo @collection, \"reset\",   @onReset\n        @listenTo @collection, \"add\",     @addItem\n        @listenTo @collection, \"remove\",  @removeItem\n\n        if not @collectionEl?\n            collectionEl = el\n\n    # if we have views before a render call, we detach them\n    render: ->\n        view.$el.detach() for id, view of @views\n        #@views.forEach (view) -> view.$el.detach()\n        super\n\n    # after render, we reattach the views\n    afterRender: ->\n        @$collectionEl = $(@collectionEl)\n        @appendView view.$el for id, view of @views\n        #@views.forEach (view) => @appendView view.$el\n        @onReset @collection\n        @onChange @views\n\n    # destroy all sub views before remove\n    remove: ->\n        @onReset []\n        super\n\n    # event listener for reset\n    onReset: (newcollection) ->\n        view.remove() for id, view of @views\n        #@views.forEach (view) -> view.remove()\n        newcollection.forEach @addItem\n\n    # event listeners for add\n    addItem: (model) =>\n        options = _.extend {}, {model: model}, @itemViewOptions(model)\n        view = new @itemview(options)\n        @views[model.cid] = view.render()\n        #@views.push view.render()\n        @appendView view\n        @onChange @views\n\n    # event listeners for remove\n    removeItem: (model) =>\n        @views[model.cid].remove()\n        delete @views[model.cid]\n\n        @onChange @views\n\n\n\n    # Manage event delegation. Events are listen to on the collection level,\n    # then the callback are called on the view that originally triggered them.\n    #\n    # * `methodName` is the method that will be called on the View.\n    # * `object` can be a File model or a DOMElement within FileView.$el\n    viewProxy: (methodName, object) ->\n\n        # Get view's cid. Views are indexed by cid. Object can be a File model\n        # or a DOMElement within FileView.$el.\n        if object.cid?\n            cid = object.cid\n        else\n            cid = @$(object.target).parents('tr').data 'cid'\n\n            unless cid?\n                cid = @$(object.currentTarget).data 'cid'\n\n        # Get the view.\n        view = _.find @views, (view) -> view.model.cid is cid\n\n        # In case of deletion, view may not exist anymore.\n        if view?\n            # Call `methodName` on the related view.\n            args = [].splice.call arguments, 1\n            view[methodName].apply view, args\n\n\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    en.coffee                                          :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 19:41:10 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/20 22:17:55 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nmodule.exports =\n    'upload-files'            : 'Upload'\n    'title'                   : 'Title'\n    'artist'                  : 'Artist'\n    '#'                       : '#'\n    'status'                  : 'status'\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    fr.coffee                                          :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 19:45:08 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/20 22:17:56 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nmodule.exports =\n    'upload-files'            : 'Upload'\n    'title'                   : 'Title'\n    'artist'                  : 'Artist'\n    '#'                       : '#'\n    'status'                  : 'Status'\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    album.coffee                                       :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/02 11:17:57 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/08 23:06:00 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\n\nmodule.exports = class Album extends Backbone.Model\n    url: 'album'\n\n\n\n    set: (attr, options) ->\n        tracks = @get 'tracks'\n        tracks?.forEach (trackId) ->\n            track = window.app.baseCollection.get trackId\n            track?.set attr\n        super attr, options\n\n\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    content_manager.coffee                             :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/08 23:06:49 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 19:58:59 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nAllTracksScreen = require '../views/content/all_tracks_screen'\nPlaylistScreen = require '../views/content/playlist_screen'\nEditionScreen = require '../views/content/edition_screen'\nSelectionList = require '../collections/selection_list'\n\n###\n# ContenScreen is the main screen where all tracks are printed. This is a\n# generique class to print any collection of tracks with an optional skeleton.\n# The collection must contain only Track models set int /models/track.coffee.\n# All track must be a reference to a track in @baseCollection which is a sort of\n# cache\n#\n# # Rendering\n# All content must have a method named \"render<content name>\" which in order:\n# - Call removeCurrentView()\n# - Call renderSkeleton(skeleton, data) (optional)\n# - set @currentcollection\n# - set custom things\n# - Call renderTracks()\n#\n# # Skeleton\n# You can render a Skeleton with the function renderSkeleton(skeleton, data).\n# The argument skeleton must be a jade file. The argument data is all data\n# accessible in the jade file. You can reach theme by the methode \"data\". The\n# template must contain a div with the id \"display-screen\" where the track\n# screen will be print\n#\n# # Contents\n# - All tracks: print @baseCollection\n# - Playlist: trigger by the event \"content-print-playlist\" with the collection\n# in argument\n#\n###\nmodule.exports = class ContentManager\n\n    currentView: null\n\n    playlistPrinted: null\n\n    constructor: ->\n        _.extend @, Backbone.Events\n\n        window.app.contentScreen = @\n        @baseCollection = window.app.baseCollection\n        @menu = window.app.menuScreen\n\n        # SelectionList is a collection of all tracks selected by the user,\n        # all actions on tracks must be handle by it\n        @selection= new SelectionList\n        @selection.baseCollection = @baseCollection\n\n        # An array of all view currently prompt\n        @loadedScreens = []\n\n    ################################ EVENTS #####################################\n        # *** content-print-playlist ***\n        # from: createNewPlaylist - models/menu_screen.coffee\n        # argument: Playlist object\n        @listenTo @menu, 'content-print-playlist', @renderPlaylist\n\n        # *** content-print-allTracks ***\n        # from: events - models/menu_screen.coffee\n        # argument:\n        @listenTo @menu, 'content-print-allTracks', @renderAllTracks\n\n    ########################## END - EVENTS - END ###############################\n\n\n    ############################ GENERIQUE ######################################\n    renderSkeleton: (skeleton, data) ->\n        if data?\n            dataParsed = {data: data?.toJSON()}\n        $('#content-screen').append(skeleton(dataParsed))\n\n\n    removeCurrentView: ->\n        switch @currentView\n            when 'allTracks' then @removeAllTracks()\n            when 'trackEdition' then @removeTrackEdition()\n            when 'playlist' then @removePlaylist()\n    ###################### END - GENERIQUE - END ################################\n\n\n    ############################ ALL TRACKS #####################################\n    renderAllTracks: ->\n        @removeCurrentView()\n        @currentView = 'allTracks'\n\n        if @loadedScreens['allTracks']?\n            @loadedScreens['allTracks'].attach()\n            return\n\n        # Initialize the tracks displayed\n        allTracks = new AllTracksScreen\n            baseCollection: @baseCollection\n\n\n        @loadedScreens['allTracks'] = allTracks\n\n        allTracks.render()\n\n        # Initialize the tracksMenu\n        # *** menu-trackEdition-lauch ***\n        # from: events - views/content/tracks_menu/tracks_menu.coffee\n        # argument:\n        @listenTo allTracks.menu, 'menu-trackEdition-lauch', @renderTrackEdition\n\n\n\n    removeAllTracks: ->\n        @loadedScreens['allTracks'].detach()\n        @currentView = null\n    ###################### END - ALL TRACKS - END ###############################\n\n\n\n    ############################## PLAYLIST #####################################\n\n    renderPlaylist: (playlist) ->\n        playlistId = playlist.id\n        @removeCurrentView()\n        @currentView = 'playlist'\n\n        if @loadedScreens[playlistId]\n            @loadedScreens[playlistId].attach()\n            @playlistPrinted = @loadedScreens[playlistId]\n            return\n\n        view = new PlaylistScreen\n            playlist: playlist\n\n        @loadedScreens[playlistId] = view\n\n        view.render()\n        @playlistPrinted = view\n\n    removePlaylist: ->\n        @playlistPrinted.detach()\n        @playlistPrinted = null\n        @currentView = null\n    ######################## END - PLAYLIST END - ###############################\n\n\n\n    ############################ TRACKS EDITION #################################\n    # Remove current content and lauch edition\n    renderTrackEdition: ->\n        @removeCurrentView()\n        @currentView =  'trackEdition'\n\n        if @loadedScreens['trackEdition']?\n            @loadedScreens['trackEdition'].attach()\n            return\n\n        # Initialize the Edition view\n        editionScreen = new EditionScreen\n\n        @loadedScreens['trackEdition'] = editionScreen\n\n        editionScreen.render()\n\n        # Listen the end of the edition\n        @listenTo editionScreen.view, 'edition-end', @renderAllTracks\n\n\n    removeTrackEdition: ->\n        @loadedScreens['trackEdition']?.detach()\n        @currentView = null\n    ###################### END - TRACKS EDITION - END ###########################\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    menu_manager.coffee                                :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/08 23:07:41 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/09 12:08:53 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nMenuView = require '../views/menu/menu_view'\nPlaylist = require './playlist'\n\n###\n# Menu represent the left menu section. It manage the view (MenuView) and the\n# playlist collection (PlaylistList)\n# Menu communicate with the content section by events which trigger some action\n# as print playlist / print all tracks / etc...\n###\nmodule.exports = class MenuManager\n\n    currentPlaylist: null\n\n    constructor: ->\n        _.extend @, Backbone.Events\n\n        @playlistsCollection =  window.app.playlistsCollection\n\n        # Set a shortcut\n        window.app.menuScreen = @\n\n        # Create the view\n        @menuView = new MenuView\n\n        # Listen the creation of a new playlist triggered by the view\n        @listenTo @menuView, 'playlist-create', @createNewPlaylist\n\n    render: ->\n        @menuView.render()\n\n    ################################ EVENTS #####################################\n    createNewPlaylist: ->\n        @playlistsCollection.create()\n\n    ########################## END - EVENTS - END ###############################\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    playlist.coffee                                    :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/26 17:19:49 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 20:01:53 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nPlaylistItems = require '../collections/playlist_items'\nPlaylistScreen = require '../views/content/playlist_screen'\n\nmodule.exports = class Playlist extends Backbone.Model\n    url: 'playlist-list'\n\n    # By default playlist name\n    defaults:\n        name: 'New Playlist'\n\n    playlistView: null\n\n    initialize: ->\n        @collection = new PlaylistItems\n        @baseCollection = window.app.baseCollection\n        @selection = window.selection\n\n\n    fetchTracks: ->\n        remoteList = []\n        listTracksId = @get 'tracksId'\n        listTracksId.forEach (id) =>\n            track = @baseCollection.get id\n            if track\n                @collection.push track\n            else\n                remoteList.push id\n        if remoteList.length > 0\n            @fetchRemoteTracks remoteList\n\n    fetchRemoteTracks: (listId) ->\n        $.ajax\n            url: \"tracks/fetch\"\n            data: {listId: listId}\n            type: 'GET'\n            error: (xhr) ->\n                console.error xhr\n            success: (data) =>\n                @baseCollection.add data, null, (tracks) =>\n                    @collection.add tracks\n\n\n    removeTrackIds: (listTrackIds, options) ->\n        if !_.isArray(listTrackIds)\n            listTrackIds = [listTrackIds]\n\n        tracksId = @get 'tracksId'\n\n        index = 0\n        loop\n            console.log 'index remove tracks ids loop: ', index\n            break if index >= listTrackIds.length\n            modelIndex = tracksId.findIndex (elem) =>\n                elem is listTrackIds[index]\n            tracksId = tracksId.splice modelIndex, 1\n            index++\n\n        @save {tracksId: tracksId}\n        @collection.remove listTrackIds, options\n\n\n    addToPlaylist: ->\n\n        listTracksId = @get 'tracksId'\n        loop\n            break if @selection.length == 0\n            track = @selection.pop()\n\n            if not (_.find listTracksId, (elem) -> elem is track.id)\n                @collection.add track\n                listTracksId.push track.id\n                track.addPlaylist @\n        @save 'tracksId', listTracksId\n\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    track.coffee                                       :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 22:06:02 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 19:45:02 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\n###\n# Represent a track element contained in the base collection\n#\n#\n# # uploadStatus Flag:\n#       In case of upload, the upload queue parse the metadata, and push it to\n#       the queue and the base collection so it is directly prompt to the user.\n#       The upload flag permit to the user to follow the uploading process and\n#       cancel it. Each modification of this flag is warn by the triggering of\n#       the 'change'.\n###\nmodule.exports = class Track extends Backbone.Model\n    url: 'track'\n\n    #TODO: handle event 'change'\n\n\n    # Local state. Handled through `markAs*` and `is*` methods.\n    uploadStatus: null\n\n    # Local stat. Handled throught nothing for the moment\n    error: null\n\n    # Valid values for `uploadStatus`.\n    # Check if conflic must be handled\n    @VALID_STATUSES: [null, 'uploading', 'uploaded', 'errored']#, 'conflict']\n\n\n\n\n    ###\n    # Getters for the local states.\n    ###\n    isUploading: -> return @uploadStatus is 'uploading'\n    isUploaded: -> return @uploadStatus is 'uploaded'\n    isErrored: -> return @uploadStatus is 'errored'\n    isConflict: -> return @uploadStatus is 'conflict'\n\n    ###\n    # Setters for the local state. Semantic wrapper for _setUploadStatus.\n    ###\n    markAsUploading: -> @_setUploadStatus 'uploading'\n    markAsUploaded: -> @_setUploadStatus 'uploaded'\n    markAsConflict: -> @_setUploadStatus 'conflict'\n    markAsErrored: (error) -> @_setUploadStatus 'errored', error\n\n\n\n\n    ###\n        Trigger change for each status update because Backbone only triggers\n        `change` events for model's attributes.\n        The `change` events allow the projection to be updated.\n        @param `status` must be in Track.VALID_STATUSES\n    ###\n    _setUploadStatus: (status, error = null) ->\n        if status not in Track.VALID_STATUSES\n            message = \"Invalid upload status #{status} not \" + \\\n                      \"in #{Track.VALID_STATUSES}\"\n            throw new Error message\n        else\n            @error = error\n            @uploadStatus = status\n            @trigger 'change', @\n\n    # Returns an existing model if a track with a similar id or a similar\n    # tack is already in the queue.\n    isTrackStored: (model) ->\n\n        # first check by id\n        existingTrack = @get model.get('id')\n\n        # TODO: make the comparisons\n\n        return existingTrack or null\n\n    # Overrides sync method to allow track upload (multipart request)\n    # and progress events call with save methode\n    sync: (method, model, options) =>\n\n\n        # this is a new model, let's upload it as a multipart\n        if model.track\n\n            # if the track is being overwritten (update), we force\n            # the \"create\" method, since only the \"create\" action in the server\n            # can handle track upload.\n            method = 'create'\n            @id = \"\"\n\n            formdata = new FormData()\n            formdata.append 'title', model.get 'title'\n            formdata.append 'artist', model.get 'artist'\n            formdata.append 'album', model.get 'album'\n            formdata.append 'trackNb', model.get 'trackNb'\n            formdata.append 'year', model.get 'year'\n            formdata.append 'genre', model.get 'genre'\n            formdata.append 'time', model.get 'time'\n            formdata.append 'docType', model.get 'docType'\n            formdata.append 'lastModification', model.get 'lastModification'\n            formdata.append 'overwrite', true if @overwrite\n            formdata.append 'track', model.track\n\n            # trigger upload progress on the model\n            progress = (e) ->\n                model.loaded = e.loaded\n                model.trigger 'progress', e\n\n            _.extend options,\n                contentType: false\n                data: formdata\n                # patch Model.sync so it could trigger progress event\n                xhr: =>\n                    xhr = $.ajaxSettings.xhr()\n                    if xhr.upload\n                        xhr.upload.addEventListener 'progress', progress, false\n                        @uploadXhrRequest = xhr\n                    xhr\n\n        Backbone.sync.apply @, arguments\n\n    addPlaylist: (playlist) ->\n        listPlaylist = @get 'playlistsId'\n        currentPlaylist = _.find listPlaylist, (elem) -> elem is playlist.id\n        if not currentPlaylist?\n            listPlaylist.push playlist.id\n            @save 'playlistsId', listPlaylist\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    router.coffee                                      :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:33 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/25 16:45:49 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\napp = require 'application'\n\nmodule.exports = class Router extends Backbone.Router\n\n    routes:\n        '': 'main'\n\n    # For the moment the view collection is recreate each time the page is\n    # loaded\n    main: ->\n        if not app.baseCollection.lenght > 0\n            app.baseCollection.fetch\n                error: (error) ->\n                    console.log error\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    app_view.coffee                                    :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:07 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/08 23:18:49 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../lib/base_view'\nMenuManager = require '../models/menu_manager'\nContentManager = require '../models/content_manager'\nPlayerScreen = require './player_screen'\n\n###\n#  Represent the app context. It contain and lauch the four big parts:\n#  - context menu\n#  - left menu\n#  - content screen\n#  - player screen\n###\nmodule.exports = class AppView extends BaseView\n\n    el: 'body.application'\n    template: require './templates/home'\n\n    afterRender: ->\n\n        # Create and render the left menu\n        @menuScreen = new MenuManager\n        @menuScreen.render()\n\n        # Create and render the player screen\n        @playerScreen = new PlayerScreen\n        @playerScreen.render()\n\n        # Create and render the content screen\n        @contentScreen = new ContentManager\n        @contentScreen.renderAllTracks()\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    all_tracks_screen.coffee                           :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/08 23:13:43 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 20:05:00 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nTracksMenuView = require './views/tracks_menu_view'\nTracksListView = require './views/tracks_list_view'\n\nmodule.exports = class AllTracksView\n    skeleton: require './skeletons/all_tracks_skel'\n\n\n    constructor: (options) ->\n        _.extend @, Backbone.Events\n\n        @selection = window.selection\n        @baseCollection = options.baseCollection\n        @frame = $('#content-screen')\n\n        @frame.append @skeleton()\n\n        @menu = new TracksMenuView\n            selection : @selection\n\n        @tracks = new TracksListView\n            collection: @baseCollection\n            selection: @selection\n\n        # *** menu-editMenu-prompte ***\n        # from: onTrackClicker - collections/selected_list.coffee\n        # argument: bool (state)\n        @listenTo @tracks, 'selection-menu-options', @menu.manageOptionsMenu\n\n        @listenTo @menu, 'track-management-remove', @baseCollection.removeTracksFromSelection\n\n\n    render: ->\n        @selection.emptySelection()\n        @menu.render()\n        @tracks.render()\n\n\n    attach: ->\n        @selection.emptySelection()\n        @menu.manageOptionsMenu 'empty'\n        @frame.append @menu.el\n        @frame.append @tracks.el\n\n    detach: ->\n        @menu.$el.detach()\n        @tracks.$el.detach()\n\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    edition_screen.coffee                              :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/08 19:28:24 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/09 19:30:15 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nEditionView = require './views/edition_view'\n\n\nmodule.exports = class EditionScreen\n    skeleton: require './skeletons/edition_skel'\n\n    constructor: ->\n        _.extend @, Backbone.Events\n\n        @frame = $('#content-screen')\n\n        @frame.html @skeleton()\n\n        @view = new EditionView\n\n\n    render: ->\n        @view.render()\n\n\n    attach: ->\n        @view.render()\n        @frame.append @view.el\n\n    detach: ->\n        @view.$el.detach()\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    playlist_screen.coffee                             :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/08 23:14:16 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 20:02:57 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nPlaylistView = require './views/playlist_view'\nTracksMenuView = require './views/tracks_menu_view'\nTracksListView = require './views/tracks_list_view'\n\nmodule.exports = class PlaylistScreen\n    skeleton: require './skeletons/playlist_skel'\n\n\n\n    constructor: (options) ->\n        @playlist = options.playlist\n        @selection = window.selection\n\n        _.extend @, Backbone.Events\n\n        @frame = $('#content-screen')\n\n        @frame.html @skeleton()\n\n        @header = new PlaylistView\n            playlist: @playlist\n\n\n        @tracks = new TracksListView\n            collection: @playlist.collection\n            selection: @selection\n\n\n    render: ->\n        @selection.emptySelection()\n        @header.render()\n        @tracks.render()\n        @playlist.fetchTracks()\n\n    attach: ->\n        @selection.emptySelection()\n        @frame.append @header.el\n        @frame.append @tracks.el\n\n    detach: ->\n        @header.$el.detach()\n        @tracks.$el.detach()\n\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div id=\\\"tracks-menu\\\"></div><div id=\\\"table-screen\\\"></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div id=\\\"edition-screen\\\"></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div id=\\\"playlist-header\\\"></div><div id=\\\"table-screen\\\"></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),track = locals_.track,album = locals_.album;\nvar trackAttributes = ['title', 'artist', 'year', 'genre', 'trackNb']\nvar albumAttributes = ['name', 'artist', 'year', 'genre']\nbuf.push(\"<div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading\\\">TRACK - data specific to the track</div><div class=\\\"panel-body\\\"><div class=\\\"form-group\\\">\");\n// iterate trackAttributes\n;(function(){\n  var $$obj = trackAttributes;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var attribute = $$obj[$index];\n\nif ( track[attribute])\n{\nbuf.push(\"<label\" + (jade.attr(\"for\", 'edit-track-' + (attribute) + '', true, false)) + \">\" + (jade.escape((jade_interp = attribute) == null ? '' : jade_interp)) + \"</label><input\" + (jade.attr(\"id\", 'edit-track-' + (attribute) + '', true, false)) + \" type=\\\"text\\\"\" + (jade.attr(\"value\", \"\" + (track[attribute]) + \"\", true, false)) + (jade.cls(['form-control track-edition ' + (attribute) + ''], [true])) + \"/>\");\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var attribute = $$obj[$index];\n\nif ( track[attribute])\n{\nbuf.push(\"<label\" + (jade.attr(\"for\", 'edit-track-' + (attribute) + '', true, false)) + \">\" + (jade.escape((jade_interp = attribute) == null ? '' : jade_interp)) + \"</label><input\" + (jade.attr(\"id\", 'edit-track-' + (attribute) + '', true, false)) + \" type=\\\"text\\\"\" + (jade.attr(\"value\", \"\" + (track[attribute]) + \"\", true, false)) + (jade.cls(['form-control track-edition ' + (attribute) + ''], [true])) + \"/>\");\n}\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"<label for=\\\"plays\\\">Plays</label><p id=\\\"plays\\\">\" + (jade.escape((jade_interp = track['plays']) == null ? '' : jade_interp)) + \"</p></div></div></div><div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading\\\">\" + (jade.escape((jade_interp = album.name) == null ? '' : jade_interp)) + \"</div><div class=\\\"panel-body\\\"><div class=\\\"form-group\\\">\");\n// iterate albumAttributes\n;(function(){\n  var $$obj = albumAttributes;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var attribute = $$obj[$index];\n\nif ( album[attribute])\n{\nbuf.push(\"<label\" + (jade.attr(\"for\", 'Edit-album-' + (attribute) + '', true, false)) + \">\" + (jade.escape((jade_interp = attribute) == null ? '' : jade_interp)) + \"</label><input\" + (jade.attr(\"id\", 'edit-album-' + (attribute) + '', true, false)) + \" type=\\\"text\\\"\" + (jade.attr(\"value\", \"\" + (album[attribute]) + \"\", true, false)) + (jade.cls(['form-control album-edition ' + (attribute) + ''], [true])) + \"/>\");\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var attribute = $$obj[$index];\n\nif ( album[attribute])\n{\nbuf.push(\"<label\" + (jade.attr(\"for\", 'Edit-album-' + (attribute) + '', true, false)) + \">\" + (jade.escape((jade_interp = attribute) == null ? '' : jade_interp)) + \"</label><input\" + (jade.attr(\"id\", 'edit-album-' + (attribute) + '', true, false)) + \" type=\\\"text\\\"\" + (jade.attr(\"value\", \"\" + (album[attribute]) + \"\", true, false)) + (jade.cls(['form-control album-edition ' + (attribute) + ''], [true])) + \"/>\");\n}\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div></div></div><button id=\\\"edit-cancel\\\" class=\\\"btn btn-default\\\">Cancel</button><button id=\\\"edit-submit\\\" class=\\\"btn btn-default\\\">Change</button>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<button type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" class=\\\"btn btn-default dropdown-toggle\\\"><Add>TO PLAYLIST</Add><span class=\\\"caret\\\"></span></button><ul id=\\\"tracks-menu-playlist-content\\\" class=\\\"dropdown-menu\\\"></ul>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),model = locals_.model;\nbuf.push(\"<a>\" + (jade.escape((jade_interp = model.name) == null ? '' : jade_interp)) + \"</a>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),playlist = locals_.playlist;\nbuf.push(\"<div class=\\\"page-header\\\"><h1>\" + (jade.escape((jade_interp = playlist.name) == null ? '' : jade_interp)) + \"</h1><div class=\\\"form-inline\\\"><div class=\\\"form-group\\\"><label for=\\\"playlist-change-name\\\" class=\\\"sr-only\\\">Playlist Name</label><input id=\\\"playlist-change-name\\\" type=\\\"text\\\" class=\\\"form-control\\\"/><button id=\\\"playlist-send-name\\\" class=\\\"btn btn-primary btn-log\\\">Change Name</button></div></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),model = locals_.model,album = locals_.album;\nbuf.push(\"<td>\" + (jade.escape((jade_interp = model.title) == null ? '' : jade_interp)) + \"</td>\");\nif ( model.artist)\n{\nbuf.push(\"<td>\" + (jade.escape((jade_interp = model.artist) == null ? '' : jade_interp)) + \"</td>\");\n}\nelse\n{\nbuf.push(\"<td>\" + (jade.escape((jade_interp = album.artist) == null ? '' : jade_interp)) + \"</td>\");\n}\nif ( album)\n{\nbuf.push(\"<td>\" + (jade.escape((jade_interp = album.name) == null ? '' : jade_interp)) + \"</td>\");\n}\nelse\n{\nbuf.push(\"<td></td>\");\n}\nbuf.push(\"<td>\" + (jade.escape((jade_interp = model.plays) == null ? '' : jade_interp)) + \"</td><td>\" + (jade.escape((jade_interp = model.time) == null ? '' : jade_interp)) + \"</td>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<table class=\\\"table table-striped\\\"><thead><tr><th>Title</th><th>Artist</th><th>Album</th><th>#</th><th>Time</th></tr></thead><tbody id=\\\"table-items-content\\\"></tbody></table>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div id=\\\"tracks-menu-button\\\" class=\\\"nav nav-tabs\\\"><input id=\\\"tracks-menu-upload\\\" name=\\\"upload-files\\\" type=\\\"file\\\" multiple=\\\"multiple\\\" accept=\\\"audio/*\\\" role=\\\"presentation\\\" class=\\\"btn btn-default btn-file\\\"/><button id=\\\"tracks-menu-fetch\\\" role=\\\"presentation\\\" class=\\\"btn btn-default\\\">FETCH</button><div id=\\\"tracks-menu-playlist\\\" class=\\\"btn-group\\\"></div><button id=\\\"tracks-menu-edit\\\" role=\\\"presentation\\\" class=\\\"btn btn-default\\\">EDIT</button><button id=\\\"tracks-menu-remove\\\" role=\\\"presentation\\\" class=\\\"btn btn-default\\\">REMOVE</button></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    edition_view.coffee                                :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/25 19:58:03 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 11:03:30 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../../../lib/base_view'\n\n###\n# Edition View is the view manager of the tracks edition screen. It handle the\n# processing of the data's selection tracks to merge it and in case of\n###\nmodule.exports = class EditionView extends BaseView\n    template: require '../templates/edition'\n\n    el: '#edition-screen'\n\n    @MERGED_ATTRIBUTES: ['title', 'artist', 'year', 'genre', 'name']\n\n    processedAttr:\n        track: {}\n        album: {}\n\n    events: ->\n        'click #edit-cancel': -> @trigger 'edition-end'\n        'click #edit-submit': 'submitEdition'\n\n\n    initialize: ->\n        @selection = window.selection\n\n\n    beforeRender: ->\n        @processeAttr()\n\n    getRenderData: ->\n        return {\n            album: @processedAttr.album\n            track: @processedAttr.track}\n\n\n    processeAttr: ->\n        model = @selection.models[0]\n        album = model.album\n        EditionView.MERGED_ATTRIBUTES.forEach (attr) =>\n            modelAttr = model.get attr\n            albumAttr = album.get attr\n            @processedAttr.track[attr] = if modelAttr then modelAttr else ''\n            @processedAttr.album[attr] = if albumAttr then albumAttr else ''\n\n    saveTrackChanges: ->\n        loop\n            break if @selection.length == 0\n            track = @selection.pop()\n            newInputAttr = null\n            EditionView.MERGED_ATTRIBUTES.forEach (attr) =>\n                inputValue = @$(\"#edit-track-#{attr}\").val()\n                if inputValue != '' and track.get(attr) != inputValue\n                    if newInputAttr == null then newInputAttr = {}\n                    newInputAttr[attr] = inputValue\n            @saveAlbumChanges track\n\n            if newInputAttr?\n                track.save newInputAttr\n\n    saveAlbumChanges: (track) ->\n        newInputAttr = null\n        album = track.album\n        EditionView.MERGED_ATTRIBUTES.forEach (attr) =>\n            inputValue = @$(\"#edit-album-#{attr}\").val()\n            if inputValue != '' and album.get(attr) != inputValue\n                if newInputAttr == null then newInputAttr = {}\n                newInputAttr[attr] = inputValue\n\n        if newInputAttr?\n            album.save newInputAttr\n\n\n    submitEdition: ->\n        @saveTrackChanges()\n        @trigger 'edition-end'\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    menu_list_view.coffee                              :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/09 12:31:35 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/09 16:52:37 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nViewCollection = require '../../../../lib/view_collection'\nMenuRowView = require './menu_row_view'\n\nmodule.exports = class MenuListView extends ViewCollection\n    template: require '../templates/menu_list'\n    el: '#tracks-menu-playlist'\n\n    itemview: MenuRowView\n    collectionEl:  '#tracks-menu-playlist-content'\n\n    initialize: ->\n        @collection = window.app.playlistsCollection\n        super\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    menu_row_view.coffee                               :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/09 12:36:43 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 11:35:57 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../../../../lib/base_view'\n\nmodule.exports = class MenuRowView extends BaseView\n    template: require '../templates/menu_row'\n\n    className: 'tracks-menu-playlist-row'\n    tagName: 'li'\n\n    initialize: ->\n        @$el.click => @model.addToPlaylist()\n        @listenTo @model, 'change:name', @render\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    playlist_view.coffee                               :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/09 17:16:36 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 11:32:18 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../../../../lib/base_view'\n\nmodule.exports = class PlaylistView extends BaseView\n    template: require '../templates/playlist'\n\n    el: '#playlist-header'\n\n    events: ->\n        'click #playlist-send-name': 'changePlaylistName'\n\n\n    initialize: (options) ->\n        @playlist = options.playlist\n        @listenTo @playlist, 'change:name', @render\n\n    getRenderData: ->\n        return {playlist: @playlist.toJSON()}\n\n\n    changePlaylistName: ->\n        data = @$('#playlist-change-name').val()\n        @playlist.set 'name', data\n        @playlist.save()\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    tracks_list_view.coffee                            :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/08 23:09:28 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 19:42:20 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nViewCollection = require '../../../../lib/view_collection'\nTracksRowView = require './tracks_row_view'\n\n###\n# TracksView is the structure for put tracks in content view\n###\nmodule.exports = class TracksListView extends ViewCollection\n    template: require '../templates/tracks_list'\n    el: '#table-screen'\n\n    itemview: TracksRowView\n    collectionEl: '#table-items-content'\n\n    events:\n        # Event delegation\n        'click tr.track-row': 'manageSelectionEvent'\n\n\n    # Keep the last track selected to have a starting point with shift. track is\n    # a model\n    _lastTrackSelected: null\n\n\n    initialize: (options) ->\n        @selection = options.selection\n        @collection = options.collection\n        super\n\n        @listenTo @selection, 'remove', _.partial(@viewProxy, 'setAsNoSelected')\n\n        @listenTo @selection, 'add', _.partial(@viewProxy, 'setAsSelected')\n\n        # Event delegation: Take the model send as argument in event and run his\n        # methode named as the second argument\n        @listenTo @collection, 'change', _.partial(@viewProxy, 'refresh')\n\n\n    triggerMenuOption: ->\n        switch @selection.length\n            when 0 then @trigger 'selection-menu-options', 'empty'\n            when 1 then @trigger 'selection-menu-options', 'unique'\n            else\n                @trigger 'selection-menu-options', 'several'\n\n                #TODO: improve it, it's not very pretty\n    manageSelectionEvent: (event) ->\n        cid = @$(event.target).parents('tr').data 'cid'\n        view = _.find @views, (view) -> view.model.cid is cid\n\n        _manageListTracksSelection = (clickedView) =>\n            keys = _.keys @views\n            startIndex = keys.indexOf @_lastTrackSelected.model.cid\n            endIndex = keys.indexOf clickedView.model.cid\n            loop\n                if startIndex < endIndex then startIndex++ else startIndex--\n                @selection.push @views[keys[startIndex]].model\n                break if startIndex == endIndex\n\n\n        if event.shiftKey && @_lastTrackSelected != null\n            _manageListTracksSelection view\n        else\n            @selection.emptySelection()\n            @selection.push view.model\n        @_lastTrackSelected = view\n        @triggerMenuOption()\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    tracks_menu_view.coffee                            :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/08 23:09:44 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 12:30:44 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../../../../lib/base_view'\nMenuListView = require './menu_list_view'\n\n###\n# Context_menu represent the menu on the top of the app. His goal is to work\n# with tracks_display. It must display the dynamiques option when the user select\n# one or several song in the tracks display.\n###\nmodule.exports = class TracksMenuView extends BaseView\n\n    template: require '../templates/tracks_menu'\n    el: '#tracks-menu'\n\n    currentStatus: 'empty'\n\n    events:\n        # Event trigger when a user valid the files to upload\n        'change #tracks-menu-upload': 'lauchUploadFiles'\n        # Lauch Tracks editions\n        'click #tracks-menu-edit': (e) -> @trigger 'menu-trackEdition-lauch'\n\n        'click #tracks-menu-remove': (e) -> @trigger 'track-management-remove'\n\n        # Bouton testing\n        # TODO: delete it\n        'click #tracks-menu-fetch': 'fetchBaseCollection'\n\n\n\n    initialize: (options) ->\n        @selection = options.selection\n\n\n    afterRender: ->\n        @menu = $('#tracks-menu-button')\n        @uploader = $('#tracks-menu-upload')\n        @editionButton = $('#tracks-menu-edit')\n        @playlistButton = $('#tracks-menu-playlist')\n        @removeButton = $('#tracks-menu-remove')\n\n        @listPlaylistsViews = new MenuListView\n        @listPlaylistsViews.render()\n\n        @editionButton.detach()\n        @playlistButton.detach()\n        @removeButton.detach()\n\n\n\n\n    # Testing function\n    # TODO: delete it\n    fetchBaseCollection: ->\n        window.app.baseCollection.fetch()\n\n\n\n    ############################## UPLOAD #####################################\n    # Catche all files in the event and send them to the uploadQueue collection\n    lauchUploadFiles: (event) ->\n        files = event.dataTransfert?.files or event.target.files\n        if files.length\n            window.app.uploadQueue.addBlobs files\n\n            if event.target?\n                target = $ event.target\n                target.replaceWith target.clone true\n    ########################## END - UPLOAD - END ###############################\n\n\n\n\n\n    ######################## ACTION TRACKS MENU #################################\n    manageOptionsMenu: (status) =>\n        if status == 'unique'\n            if @currentStatus == 'empty'\n                @menu.append @removeButton\n                @menu.append @playlistButton\n                @menu.append @editionButton\n            else if @currentStatus == 'several'\n                @menu.append @editionButton\n            @currentStatus = status\n        else if status == 'empty'\n            if @currentStatus == 'unique'\n                @editionButton.detach()\n                @playlistButton.detach()\n                @removeButton.detach()\n            else if @currentStatus == 'several'\n                @playlistButton.detach()\n                @removeButton.detach()\n            @currentStatus = status\n        else if status == 'several'\n            if @currentStatus == 'empty'\n                @menu.append @removeButton\n                @menu.append @playlistButton\n            else if @currentStatus == 'unique'\n                @editionButton.detach()\n                @menu.append @removeButton\n                @menu.append @playlistButton\n            @currentStatus = status\n    ################### END - ACTION TRACKS MENU - END ##########################\n\n\n\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    tracks_row_view.coffee                             :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/08 23:13:31 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 18:49:44 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../../../../lib/base_view'\n\n###\n# Each TrackView represent a track in a collection\n###\nmodule.exports = class TrackRowView extends BaseView\n    template: require '../templates/track_row'\n\n    className: 'track-row'\n    tagName: 'tr'\n\n    _selectedStatus: false\n\n\n    getRenderData: ->\n        return { model: @model?.toJSON(), album: @model?.album?.toJSON()}\n\n    afterRender: ->\n        @$el.data 'cid', @model.cid\n        if @model.isUploading()\n            @$el.addClass 'warning'\n        else if @model.isUploaded()\n            @$el.removeClass 'warning'\n        else if @model.isErrored()\n            @$el.addClass 'danger'\n        else if @model.isConflict()\n            @$el.addClass 'info'\n\n    refresh: ->\n        @render()\n\n    ########################## Manage Select stat ###############################\n    setAsSelected: ->\n        @$el.addClass 'success'\n\n    setAsNoSelected: ->\n        @$el.removeClass 'success'\n\n    changeSelectStat: ->\n        if @isTrackSelected()\n            @setTrackAsNoSelected()\n        else\n            @setTrackAsSelected()\n        return @_selectedStatus\n\n    isSelected: ->\n        return @_selectedStatus\n\n    setAsSelected: ->\n        @$el.addClass 'success'\n        @_selectedStatus = true\n\n    setAsNoSelected: ->\n        @$el.removeClass 'success'\n        @_selectedStatus = false\n\n\n    ##################### END - Manage Select Stat - END #########################\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    left_menu.coffee                                   :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:40 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/08 23:28:54 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../../lib/base_view'\nPlaylistsListView = require './playlist/playlists_list_view'\n\n###\n# MenuView represent the main panel view. His goal is trigger the changing\n# of content in the tracks screen\n#\n# The playlists names a handle by a collection of view (PlaylistView)\n###\nmodule.exports = class MenuView extends BaseView\n\n    template: require './templates/menu_screen'\n    el: '#left-menu'\n\n    events:\n        'click #menu-playlist-new': 'createNewPlaylist'\n        'click #menu-all-tracks': 'printAllTracks'\n\n    initialize: ->\n        # Get the collection of playlist\n        @playlistsCollection = window.app.playlistsCollection\n\n        window.app.menuScreen = @\n\n\n    afterRender: ->\n        # Create a collection of playlist view based on the collection\n        @playlistsViews = new PlaylistsListView\n            collection: @playlistsCollection\n        @playlistsViews.render()\n\n\n    createNewPlaylist: ->\n        @trigger 'playlist-create'\n\n\n    printAllTracks: ->\n        @trigger 'content-print-allTracks'\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    playlists_list_view.coffee                         :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/08 23:17:16 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/09 11:33:53 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nViewCollection = require '../../../lib/view_collection'\nPlaylistRowView = require './playlists_row_view'\n\nmodule.exports = class PlaylistsListView extends ViewCollection\n    template: require './templates/playlists'\n    el: '#menu-playlist'\n\n    itemview: PlaylistRowView\n\n    collectionEl: '#menu-playlist-list'\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    playlists_row_view.coffee                          :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/09/08 23:20:14 by ppeltier          #+#    #+#              #\n#    Updated: 2015/09/10 11:20:49 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../../../lib/base_view'\n\nmodule.exports = class PlaylistRowView extends BaseView\n    template: require './templates/playlist'\n\n    className: 'playlist-row'\n    tagName: 'li'\n\n    initialize: ->\n        @$el.click => window.app.menuScreen.trigger 'content-print-playlist', @model\n\n        @listenTo @model, 'change:name', @render\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),model = locals_.model;\nbuf.push(\"<a>\" + (jade.escape((jade_interp = model.name) == null ? '' : jade_interp)) + \"</a>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<ul id=\\\"menu-playlist-list\\\" class=\\\"nav nav-sidebar\\\"></ul><li id=\\\"menu-playlist-new\\\"><a>Create a Playlist</a></li>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<label for=\\\"menu-section\\\">Section</label><ul id=\\\"menu-section\\\" class=\\\"nav nav-sidebar\\\"><li><a id=\\\"menu-all-tracks\\\">All Tracks</a></li></ul><label for=\\\"menu-playlist\\\">Playlist</label><div id=\\\"menu-playlist\\\"></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    player_screen.coffee                               :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:58:59 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/25 10:16:53 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../lib/base_view'\n\n# Context_menu represent the menu on the top of the app. His goal is to work\n# with tracks_screen. It must display the dynamiques option when the user select\n# one or several song in the tracks screen.\nmodule.exports = class PlayerScreen extends BaseView\n\n    template: require('./templates/player_screen')\n    el: '#player-screen'\n    tagName: 'div'\n    className: 'player-screen'\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div class=\\\"container-fluid\\\"><div id=\\\"left-menu\\\" class=\\\"sidebar\\\"></div><div id=\\\"content-screen\\\" class=\\\"content container-fluid\\\"></div></div><div id=\\\"player-screen\\\" class=\\\"footer player\\\"></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<h1>Player screen</h1>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}"]}