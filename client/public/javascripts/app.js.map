{"version":3,"sources":["app/application.coffee","app/collections/selected_list.coffee","app/collections/tracks_list.coffee","app/collections/upload_queue.coffee","app/initialize.coffee","app/lib/app_helpers.coffee","app/lib/base_view.coffee","app/lib/view_collection.coffee","app/locales/en.coffee","app/locales/fr.coffee","app/models/track.coffee","app/router.coffee","app/views/app_view.coffee","app/views/content/edition/edition_view.coffee","app/views/content/edition/templates/edition.jade","app/views/content/edition_skel.jade","app/views/content/track/templates/track.jade","app/views/content/track/templates/tracks.jade","app/views/content/track/track_view.coffee","app/views/content/track/tracks_view.coffee","app/views/content/track_skel.jade","app/views/content_screen.coffee","app/views/context_menu.coffee","app/views/left_menu.coffee","app/views/player_screen.coffee","app/views/templates/context_menu.jade","app/views/templates/home.jade","app/views/templates/left_menu.jade","app/views/templates/player_screen.jade"],"names":[],"mappings":"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","file":"public/javascripts/app.js","sourcesContent":["# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    application.coffee                                 :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:38 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/25 16:45:41 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nAppView = require './views/app_view'\nTracksList = require './collections/tracks_list'\nUploadQueue = require './collections/upload_queue'\n\nmodule.exports =\n\n    initialize: ->\n\n        # Create a shortcut\n        window.app = @\n\n        # BaseCollection is the main collection where all the tracks are stored, all\n        # the others list must have only a reference to a track of this list\n        @baseCollection = new TracksList\n\n        # Print the main structure\n        mainView = new AppView\n        mainView.render()\n\n        # Routing management\n        Router = require 'router'\n        @router = new Router()\n        Backbone.history.start()\n\n        # uploadQueue is the list of track waiting to be uploaded. The tracks in\n        # uploadQueue are also added to the mainTrackList to be printed.\n        @uploadQueue = new UploadQueue @baseCollection\n\n        # Makes this object immuable.\n        Object.freeze this if typeof Object.freeze is 'function'\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    selected_list.coffee                               :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/23 19:30:42 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/26 12:57:54 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nTrack = require './../models/track'\n\n###\n# SelectedList is a collection of Track model selected by the user. This Tracks\n# are references to Tracks models contains in the Base collection. So all action\n# on tracks must be handle by this list which update the Base Collection and the\n# view.It's the same collection for all content screen (playlist/all tracks/etc...)\n# which is refresh.\n###\nmodule.exports = class SelectedTracksList extends Backbone.Collection\n    model: Track\n    url: 'tracks'\n\n    # Keep the last track selected to have a starting point with shift. track is\n    # a model\n    _lastTrackSelected: null\n\n    # Take a count of the number of track in update processing\n    processingUpdate: 0\n    # Take a count of the success and error updating\n    errorUpdating: 0\n    successUpdating: 0\n\n    initialize: ->\n        super\n        # Create a shortcute for each track view can access to the selected\n        # tracks list to trigger an event when they are selected\n        window.selectedTracksList = @\n\n    ########################## Manage Select stat ###############################\n    onTrackClicked: (model, isShiftPressed = false) ->\n        if isShiftPressed == true && @_lastTrackSelected != null\n            @_manageListTracksSelection model\n        else\n            @_manageTrackSelection model\n        @_lastTrackSelected = model\n\n    _manageListTracksSelection: (lastModel) ->\n        startIndex = @baseCollection.indexOf @_lastTrackSelected\n        endIndex = @baseCollection.indexOf lastModel\n        loop\n            if startIndex < endIndex\n                startIndex++\n            else startIndex--\n            @_manageTrackSelection @baseCollection.at startIndex\n            break if startIndex == endIndex\n\n\n\n    # Check the select stat of the view and add/remove his to the collection\n    _manageTrackSelection: (model) ->\n        if model.isSelected() == false\n            @add model\n            model.setAsSelected()\n        else\n            @remove model\n            model.setAsNoSelected()\n\n    # Trigger an event when a some track is selected to pop the action track\n    # menu. A other event is trigger to remove it\n    add: (models, options) ->\n        if @length == 0\n            @trigger 'selectionTracksState', true\n        super models, options\n\n    remove: (models, options) ->\n        super models, options\n        if @length == 0\n            @trigger 'selectionTracksState', false\n    #################### END - Manage Select Stat - END #########################\n\n\n\n    ############################ Edition tracks #################################\n\n    updateTracks: (newAttrs) ->\n        errorUpdating = 0\n        successUpdating = 0\n        setOfAttr = null\n        loop\n            track = @pop()\n            track.setAsNoSelected()\n            i = 0\n            loop\n                setOfAttr = newAttrs[i]\n                if track.get(setOfAttr[0]) != setOfAttr[1]\n                    memory = track.get(setOfAttr[0])\n                    track.set setOfAttr[0], setOfAttr[1]\n                i++\n                break if i == newAttrs.length\n            @processingUpdate++\n            track.sync 'update', track,\n                error: (res) =>\n                    @setUpdateError()\n                    @set res.data\n                success: (data) =>\n                    @setUpdateSuccess()\n            break if @length == 0\n\n\n    setUpdateError: ->\n        @processingUpdate--\n        @errorUpdating++\n        @checkProcessingUpdateQueue()\n\n    setUpdateSuccess: ->\n        @processingUpdate--\n        @successUpdating++\n        @checkProcessingUpdateQueue()\n\n    checkProcessingUpdateQueue: ->\n        if @processingUpdate == 0\n            console.log 'EDITION: ', @successUpdating, ' successe and ', @errorUpdating, ' error'\n    ###################### END - Edition tracks - END ###########################\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    tracks_list.coffee                                 :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 18:42:03 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/25 22:46:58 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nTrack = require './../models/track'\n\n###\n# Represents a collection of tracks\n# It acts as a cache when instanciate as the baseCollection\n# The base collection holds ALL tracks of the application\n###\nmodule.exports = class TracksList extends Backbone.Collection\n    model: Track\n    url: 'tracks'\n\n    # Number of tracks downloaded to each call of fetch\n    sizeFrameDownload: 5\n\n    # Set the number of tracks downloaded, each call of fetch will increment it\n    # by sizeFrameDownload\n    cursorFrameDownload: 0\n\n    # Returns an existing model if a track with a similar id or a similar\n    # tack is already in the queue.\n    isTrackStored: (model) ->\n\n        # first check by id\n        existingTrack = @get model.get('id')\n\n        # TODO: make the comparisons\n\n        return existingTrack or null\n\n    # Change to fetch data by range, it ask the server to retrieve the number of\n    # tracks set in sizeFrameDownload from cursorFrameDownload and in case of\n    # success add the number of tracks retrieved to cursorFramDownload\n    fetch: ->\n        $.ajax\n            url: \"tracks/#{@cursorFrameDownload}/#{@sizeFrameDownload}\"\n            type: 'GET'\n            error: (xhr) ->\n                console.error xhr\n            success: (data) =>\n                @cursorFrameDownload += data.length\n                @add data,\n                    remove: false\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    upload_queue.coffee                                :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 23:50:03 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/26 12:57:37 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nTrack = require './../models/track'\n\n###\n# The UploadQueue is a mix of async.queue & BackboneCollection\n# - Blobs are parsed and added to the queue and the base collection with the flag\n# uploading\n###\nmodule.exports = class UploadQueue\n    model: Track\n\n    # number of tracks actually loaded\n    loaded: 0\n\n    # TODO: Catch event \"badFileType\" and prompt an error\n    # TODO: Catch event \"upload-complete\"\n    # TODO: Catch event \"metaDataError\"\n\n    constructor: (@baseCollection) ->\n\n        # Create a collection for elements to be processed by the queue. This\n        # information is not based on the base collection for performance\n        # reasons (it doesn't have to be updated each time a big folder is\n        # loaded.)\n        @uploadCollection = new Backbone.Collection()\n\n        # Backbone.Events is a mixin, not a \"class\" you can extend.\n        _.extend @, Backbone.Events\n\n        @asyncQueue = async.queue @uploadWorker, 5\n        @asyncQueue.drain = @completeUpload.bind @\n\n\n    addBlobs: (blobs) ->\n        #@reset if @completed // not implemented\n\n        i = 0\n        # Non blocking loop, handling one file every 2ms so the UI don't get\n        # stuck\n        do nonBlockingLoop = =>\n            return unless blob = blobs[i++]\n\n            # Check if the client have send a good format\n            # TODO: Later check if it's a picture to get the covert\n            if not blob.type.match /audio\\/(mp3|mpeg)/ #list of supported filetype\n                @trigger 'badFileType'\n            else\n                @retrieveMetaDataBlob blob, (model) =>\n                    # Check if a same track is already stored in the base collection\n                    if (existingModel = @isTrackStored(model)?)\n                        # Check if the track is in upload process or if it's already\n                        # successfully added\n                        if not existingModel.inUploadCycle() or existingModel.isUploaded()\n                            # update data\n                            existingModel.set\n                                size: blob.size\n                                lastModification: blob.lastModifiedDate\n\n                            existingModel.track = blob\n                            existingModel.loaded = 0\n                            existingModel.total = blob.size\n\n                            model = existingModel\n\n                            model.markAsConflict()\n                            @trigger 'conflict', model\n                        else\n                            # Prevent the track from being added to the queue.\n                            model = null\n                    if model?\n                        @add model\n\n                setTimeout nonBlockingLoop, 2\n\n\n    # Retrieve all data needed in the metadata and the ID3 metadata\n    # What is ID3 ?? -> https://en.wikipedia.org/wiki/ID3\n    # TODO: Improve the ID3 reader\n    # TODO: parse title -> take the ID3 title usualy much better\n    # TODO: retrieve album picture -> will be complicate because that need an\n    # inter app protocole with file and/or picture app\n    # TODO: There is lot's of other data to retrieve, may be interesting to look\n    # up\n    retrieveMetaDataBlob: (blob, callback) ->\n\n        model = new Track\n            title: blob.name\n            lastModification: blob.lastModifiedDate\n            size: blob.size\n            docType: blob.type\n\n        model.track = blob\n        model.load = 0\n        model.total = blob.size\n\n        reader = new FileReader()\n        reader.onload = (event) ->\n            ID3.loadTags blob.name, ( ->\n                tags = ID3.getAllTags blob.name\n                model.set\n                    title: if tags.title? then tags.title else model.title\n                    artist: if tags.artist? then tags.artist else undefined\n                    album: if tags.album? then tags.album else undefined\n                    trackNb: if tags.track? then tags.track else undefined\n                    year: if tags.year? then tags.year else undefined\n                    genre: if tags.genre? then tags.genre else undefined\n                    time: if tags.TLEN?.data? then tags.TLEN.data else undefined\n                callback(model)\n            ),\n            tags: [\"title\",\"artist\",\"album\",\"track\",\"year\",\"genre\",\"TLEN\"]\n            dataReader: FileAPIReader blob\n        reader.readAsArrayBuffer blob\n        reader.onabort = (event) ->\n            @trigger 'metaDataError'\n            callback(model)\n\n\n    # Add a to the operations in progress, change his status and\n    # push it in the queue\n    add: (model) ->\n        window.pendingOperations.upload++ # set in initialize.coffee\n\n        # don't override conflict status\n        model.markAsUploading() unless model.isConflict()\n\n        # Push it at the end of the queue\n        @asyncQueue.push model\n\n        model.set 'plays', 0\n        # Add to the base collection to print it\n        @baseCollection.add model\n\n        # Add to the upload collection so it can be precessed\n        @uploadCollection.add model\n\n\n\n    # Perform the actual persistence by saving the model and changing\n    # uploadStatus based on response. If there is an unexpected error,\n    # it tries again 3 times before failing.\n    _processSave: (model, done) ->\n        if not model.isErrored() and not model.isConflict()\n            model.save null,\n                success: (model) =>\n                    model.track = null\n                    # Make sure progress is uniform, we force it a 100%\n                    model.loaded = model.total\n                    model.markAsUploaded()\n                    done null\n                error: (_, err) =>\n                    model.track = null\n                    body = try JSON.parse(err.responseText)\n                    catch e then msg: null\n                    if err.status is 400 and body.code is 'ESTORAGE'\n                        model.markAsErrored body\n                    else if err.status is 0 and err.statusText is 'error'\n                        # abort by user, don't try again\n\n                    # Retry if an unexpected error occurs\n                    else\n                        model.tries = 1 + (model.tries or 0)\n                        if model.tries > 3\n                            defaultMessage = \"modal error track upload\"\n                            model.error = t err.msg or defaultMessage\n                            errorKey = err.msg or defaultMessage\n                            error = t errorKey\n                            model.markAsErrored error\n                        else\n                            # let's try again\n                            @asyncQueue.push model\n                #done()\n        else\n            done()\n\n\n    # Process each element in the queue\n       uploadWorker: (model, next) =>\n        # Skip if there is an error.\n        if model.error\n            setTimeout next, 10\n\n        # If there is a conflict, the queue waits for the user to\n        # make a decision.\n        # Not implemented yep\n        else if model.isConflict()\n            alert 'CONFLICT'\n        # Otherwise, the upload starts directly.\n        else\n            @_processSave model, next\n\n\n    # Reset variables and trigger completion events.\n    completeUpload: =>\n        window.pendingOperations.upload = 0\n        @completed = true\n        @trigger 'upload-complete'\n\n\n    # Returns an existing model if a track with a similar id or a similar\n    # location (path + name) is already in the queue.\n    isTrackStored: (model) ->\n        return @baseCollection.isTrackStored model\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    initialize.coffee                                  :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:35 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/24 18:47:52 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\napp = require 'application'\n\n# The function called from index.html\n$ ->\n    require 'lib/app_helpers'\n\n    ######## Initialize Polyglot ############\n    # Based on cozy-contact\n    @locale = window.locale\n    delete window.locale\n\n    @polyglot = new Polyglot()\n\n    try\n        locales = require \"locales/\" + @locale\n    catch err\n        locales = require 'locales/en'\n\n    # we give polyglot the data\n    @polyglot.extend @locales\n\n    # handy shortcut\n    window.t = @polyglot.t.bind @polyglot\n    ########## END - Initialize Polyglot - END ############\n\n\n    # Keep count of the operations in progress\n    window.pendingOperations =\n        upload: 0\n\n    app.initialize()\n","(->\n    # IIFE to avoid collisions with other variables\n    (->\n        # Make it safe to do console.log() always.\n        console = window.console = window.console or {}\n        method = undefined\n        dummy = ->\n        methods = ('assert,count,debug,dir,dirxml,error,exception,\n                   group,groupCollapsed,groupEnd,info,log,markTimeline,\n                   profile,profileEnd,time,timeEnd,trace,warn').split ','\n\n        console[method] = console[method] or dummy while method = methods.pop()\n    )()\n)()\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    base_view.coffee                                   :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:31:15 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/25 10:32:16 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nmodule.exports = class BaseView extends Backbone.View\n\n    template: ->\n\n    initialize: ->\n\n    getRenderData: ->\n        model: @model?.toJSON()\n\n    render: ->\n        @beforeRender()\n        @$el.html @template(@getRenderData())\n        @afterRender()\n        @\n\n    beforeRender: ->\n\n    afterRender: ->\n\n    destroy: ->\n        @undelegateEvents()\n        @$el.removeData().unbind()\n        @remove()\n        Backbone.View::remove.call @\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    view_collection.coffee                             :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:31:19 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/25 17:32:45 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require 'lib/base_view'\n\n# View that display a collection of subitems\n# used to DRY views\n# Usage : new ViewCollection(collection:collection)\n# Automatically populate itself by creating a itemView for each item\n# in its collection\n\n# can use a template that will be displayed alongside the itemViews\n\n# itemView       : the Backbone.View to be used for items\n# itemViewOptions : the options that will be passed to itemViews\n# collectionEl : the DOM element's selector where the itemViews will\n#                be displayed. Automatically falls back to el if null\n\nmodule.exports = class ViewCollection extends BaseView\n\n    itemview: null\n\n    views: {}\n\n    template: -> ''\n\n    itemViewOptions: ->\n\n    collectionEl: null\n\n    # add 'empty' class to view when there is no subview\n    onChange: ->\n        @$el.toggleClass 'empty', _.size(@views) is 0\n\n    # can be overriden if we want to place the subviews somewhere else\n    appendView: (view) ->\n        @$collectionEl.append view.el\n\n    # bind listeners to the collection\n    initialize: ->\n        super\n        @views = {}\n        @listenTo @collection, \"reset\",   @onReset\n        @listenTo @collection, \"add\",     @addItem\n        @listenTo @collection, \"remove\",  @removeItem\n\n        if not @collectionEl?\n            collectionEl = el\n\n    # if we have views before a render call, we detach them\n    render: ->\n        view.$el.detach() for id, view of @views\n        super\n\n    # after render, we reattach the views\n    afterRender: ->\n        @$collectionEl = $(@collectionEl)\n        @appendView view.$el for id, view of @views\n        @onReset @collection\n        @onChange @views\n\n    # destroy all sub views before remove\n    remove: ->\n        @onReset []\n        super\n\n    # event listener for reset\n    onReset: (newcollection) ->\n        view.remove() for id, view of @views\n        newcollection.forEach @addItem\n\n    # event listeners for add\n    addItem: (model) =>\n        options = _.extend {}, {model: model}, @itemViewOptions(model)\n        view = new @itemview(options)\n        @views[model.cid] = view.render()\n        @appendView view\n        @onChange @views\n\n    # event listeners for remove\n    removeItem: (model) =>\n        @views[model.cid].remove()\n        delete @views[model.cid]\n\n        @onChange @views\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    en.coffee                                          :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 19:41:10 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/20 22:17:55 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nmodule.exports =\n    'upload-files'            : 'Upload'\n    'title'                   : 'Title'\n    'artist'                  : 'Artist'\n    '#'                       : '#'\n    'status'                  : 'status'\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    fr.coffee                                          :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 19:45:08 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/20 22:17:56 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nmodule.exports =\n    'upload-files'            : 'Upload'\n    'title'                   : 'Title'\n    'artist'                  : 'Artist'\n    '#'                       : '#'\n    'status'                  : 'Status'\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    track.coffee                                       :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 22:06:02 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/25 20:10:13 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\n###\n# Represent a track element contained in the base collection\n#\n#\n# # uploadStatus Flag:\n#       In case of upload, the upload queue parse the metadata, and push it to\n#       the queue and the base collection so it is directly prompt to the user.\n#       The upload flag permit to the user to follow the uploading process and\n#       cancel it. Each modification of this flag is warn by the triggering of\n#       the 'change'.\n###\nmodule.exports = class Track extends Backbone.Model\n    url: 'track'\n\n    #TODO: handle event 'change'\n\n\n    # Local state. Handled through `markAs*` and `is*` methods.\n    uploadStatus: null\n\n    # Local stat. Handled throught nothing for the moment\n    error: null\n\n    # Valid values for `uploadStatus`.\n    # Check if conflic must be handled\n    @VALID_STATUSES: [null, 'uploading', 'uploaded', 'errored']#, 'conflict']\n\n    # Define if the track is selected or not, it's managed by the selected\n    # tracks collection. This is relevant in the view but it's much easier to\n    # handle it in the models\n    _selectedStatus: false\n\n    ###\n    # Getters for the local states.\n    ###\n    isUploading: -> return @uploadStatus is 'uploading'\n    isUploaded: -> return @uploadStatus is 'uploaded'\n    isErrored: -> return @uploadStatus is 'errored'\n    isConflict: -> return @uploadStatus is 'conflict'\n\n    ###\n    # Setters for the local state. Semantic wrapper for _setUploadStatus.\n    ###\n    markAsUploading: -> @_setUploadStatus 'uploading'\n    markAsUploaded: -> @_setUploadStatus 'uploaded'\n    markAsConflict: -> @_setUploadStatus 'conflict'\n    markAsErrored: (error) -> @_setUploadStatus 'errored', error\n\n\n    ###\n        Trigger change for each status update because Backbone only triggers\n        `change` events for model's attributes.\n        The `change` events allow the projection to be updated.\n        @param `status` must be in Track.VALID_STATUSES\n    ###\n    _setUploadStatus: (status, error = null) ->\n        if status not in Track.VALID_STATUSES\n            message = \"Invalid upload status #{status} not \" + \\\n                      \"in #{Track.VALID_STATUSES}\"\n            throw new Error message\n        else\n            @error = error\n            @uploadStatus = status\n            @trigger 'change', @\n\n    # Returns an existing model if a track with a similar id or a similar\n    # tack is already in the queue.\n    isTrackStored: (model) ->\n\n        # first check by id\n        existingTrack = @get model.get('id')\n\n        # TODO: make the comparisons\n\n        return existingTrack or null\n\n    # Overrides sync method to allow track upload (multipart request)\n    # and progress events call with save methode\n    sync: (method, model, options) =>\n\n\n        # this is a new model, let's upload it as a multipart\n        if model.track\n\n            # if the track is being overwritten (update), we force\n            # the \"create\" method, since only the \"create\" action in the server\n            # can handle track upload.\n            method = 'create'\n            @id = \"\"\n\n            formdata = new FormData()\n            formdata.append 'title', model.get 'title'\n            formdata.append 'artist', model.get 'artist'\n            formdata.append 'album', model.get 'album'\n            formdata.append 'trackNb', model.get 'trackNb'\n            formdata.append 'year', model.get 'year'\n            formdata.append 'genre', model.get 'genre'\n            formdata.append 'time', model.get 'time'\n            formdata.append 'docType', model.get 'docType'\n            formdata.append 'lastModification', model.get 'lastModification'\n            formdata.append 'overwrite', true if @overwrite\n            formdata.append 'track', model.track\n\n            # trigger upload progress on the model\n            progress = (e) ->\n                model.loaded = e.loaded\n                model.trigger 'progress', e\n\n            _.extend options,\n                contentType: false\n                data: formdata\n                # patch Model.sync so it could trigger progress event\n                xhr: =>\n                    xhr = $.ajaxSettings.xhr()\n                    if xhr.upload\n                        xhr.upload.addEventListener 'progress', progress, false\n                        @uploadXhrRequest = xhr\n                    xhr\n\n        Backbone.sync.apply @, arguments\n\n\n\n\n    ########################### Manage View stat ################################\n    # Getter\n    isSelected: -> return @_selectedStatus\n    # Setters\n    setAsSelected: ->\n        @_selectedStatus = true\n        @trigger 'toggle-select', cid: @cid\n\n    setAsNoSelected: ->\n        @_selectedStatus = false\n        @trigger 'toggle-select', cid: @cid\n\n    ##################### END - Manage View Stat - END ##########################\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    router.coffee                                      :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:33 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/25 16:45:49 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\napp = require 'application'\n\nmodule.exports = class Router extends Backbone.Router\n\n    routes:\n        '': 'main'\n\n    # For the moment the view collection is recreate each time the page is\n    # loaded\n    main: ->\n        if not app.baseCollection.lenght > 0\n            app.baseCollection.fetch\n                error: (error) ->\n                    console.log error\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    app_view.coffee                                    :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:07 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/25 19:20:38 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../lib/base_view'\nLeftMenu = require './left_menu'\nContentScreen = require './content_screen'\nPlayerScreen = require './player_screen'\n\n###\n#  Represent the app context. It contain and lauch the four big parts:\n#  - context menu\n#  - left menu\n#  - content screen\n#  - player screen\n###\nmodule.exports = class AppView extends BaseView\n\n    el: 'body.application'\n    template: require './templates/home'\n\n    afterRender: ->\n\n        # Create and render the left menu\n        @leftMenu = new LeftMenu\n        @leftMenu.render()\n\n\n        # Create and render the player screen\n        @playerScreen = new PlayerScreen\n        @playerScreen.render()\n\n        # Create and render the content screen\n        @contentScreen = new ContentScreen\n        @contentScreen.renderAllTracks()\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    edition_view.coffee                                :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/25 19:58:03 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/26 12:29:36 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../../../lib/base_view'\n\n###\n# Edition View is the view manager of the tracks edition screen. It handle the\n# processing of the data's selectedTracksList tracks to merge it and in case of\n###\nmodule.exports = class EditionView extends BaseView\n    template: require './templates/edition'\n    el: '#edition-screen'\n\n    @MERGED_ATTRIBUTES: ['title', 'artist', 'album', 'year', 'genre']\n\n    # Take a count of the number of track in update processing to send a\n    # notification when it's finish\n    processingUpdate: 0\n\n    processedAttr: {}\n\n    events: ->\n        'click #edit-cancel': 'cancelEdition'\n        'click #edit-submit': 'submitEdition'\n\n    initialize: ->\n        @collection = window.selectedTracksList\n\n\n    render: ->\n        @mergeMetaData()\n        @cleanProcessedAttr()\n        @$el.append(@template {attr: @processedAttr})\n\n    mergeMetaData: ->\n        EditionView.MERGED_ATTRIBUTES.forEach (attribute) =>\n            lastAttribute = undefined\n            isSimilar = true\n            @collection.models.forEach (track) ->\n                if lastAttribute != undefined and track.get(attribute) != lastAttribute\n                    isSimilar = false\n                if lastAttribute == undefined\n                    lastAttribute = track.get attribute\n            if lastAttribute != undefined && isSimilar == true\n                @processedAttr[attribute] = lastAttribute\n\n    cleanProcessedAttr: ->\n        EditionView.MERGED_ATTRIBUTES.forEach (attr) =>\n            if @processedAttr[attr] == undefined\n                @processedAttr[attr] = ''\n\n    saveEditionChanges: ->\n        newInputAttr = new Array\n        EditionView.MERGED_ATTRIBUTES.forEach (attr) =>\n            attrValue = @processedAttr[attr]\n            inputValue = @$(\"#edit-#{attr}\").val()\n            if inputValue != '' and attrValue != inputValue\n                newInputAttr.push [attr, inputValue]\n        @collection.updateTracks newInputAttr\n\n    computeChangeAttr: (attribute, inputValue) ->\n        @collection.models.forEach (track) ->\n            track.set attribute, inputValue\n\n\n\n    cancelEdition: ->\n        @freeSelectedTracksList()\n        @trigger 'edition-end'\n\n    submitEdition: ->\n        @saveEditionChanges()\n        @trigger 'edition-end'\n\n    freeSelectedTracksList: ->\n        loop\n            track = @collection.pop()\n            track.setAsNoSelected()\n            break if @collection.length == 0\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),attr = locals_.attr;\nbuf.push(\"<div class=\\\"form-group\\\"><label for=\\\"Edit-title\\\">Title</label><input id=\\\"edit-title\\\" type=\\\"text\\\"\" + (jade.attr(\"value\", \"\" + (attr['title']) + \"\", true, false)) + \" class=\\\"form-control\\\"/><label for=\\\"Edit-artist\\\">Artist</label><input id=\\\"edit-artist\\\" type=\\\"text\\\"\" + (jade.attr(\"value\", \"\" + (attr['artist']) + \"\", true, false)) + \" class=\\\"form-control\\\"/><label for=\\\"Edit-album\\\">Album</label><input id=\\\"edit-album\\\" type=\\\"text\\\"\" + (jade.attr(\"value\", \"\" + (attr['album']) + \"\", true, false)) + \" class=\\\"form-control\\\"/><label for=\\\"Edit-year\\\">Year</label><input id=\\\"edit-year\\\" type=\\\"text\\\"\" + (jade.attr(\"value\", \"\" + (attr['year']) + \"\", true, false)) + \" class=\\\"form-control\\\"/><label for=\\\"Edit-genre\\\">Genre</label><input id=\\\"edit-genre\\\" type=\\\"text\\\"\" + (jade.attr(\"value\", \"\" + (attr['genre']) + \"\", true, false)) + \" class=\\\"form-control\\\"/></div><button id=\\\"edit-cancel\\\" class=\\\"btn btn-default\\\">Cancel</button><button id=\\\"edit-submit\\\" class=\\\"btn btn-default\\\">Change</button>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div id=\\\"edition-screen\\\"></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),model = locals_.model;\nbuf.push(\"<td>\" + (jade.escape((jade_interp = model.title) == null ? '' : jade_interp)) + \"</td><td>\" + (jade.escape((jade_interp = model.artist) == null ? '' : jade_interp)) + \"</td><td>\" + (jade.escape((jade_interp = model.album) == null ? '' : jade_interp)) + \"</td><td>\" + (jade.escape((jade_interp = model.plays) == null ? '' : jade_interp)) + \"</td><td>\" + (jade.escape((jade_interp = model.time) == null ? '' : jade_interp)) + \"</td>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<table class=\\\"table table-striped\\\"><thead><tr><th>Title</th><th>Artist</th><th>Album</th><th>#</th><th>Time</th></tr></thead><tbody id=\\\"table-items-content\\\"></tbody></table>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    track_view.coffee                                  :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/20 18:08:58 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/26 12:58:06 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../../../lib/base_view'\n\n###\n# Each TrackView represent a track in a collection\n###\nmodule.exports = class TrackView extends BaseView\n    template: require './templates/track'\n\n    className: 'track-row'\n    tagName: 'tr'\n\n\n    afterRender: ->\n        @$el.data 'cid', @model.cid\n        if @model.isUploading()\n            @$el.addClass 'warning'\n        else\n            @$el.removeClass 'warning'\n\n    refresh: ->\n        #console.log @model.uploadStatus\n        #console.log @model\n        @render()\n\n    ########################## Manage Select stat ###############################\n    onTrackClicked: (event) -> # Check if shift or control have been pressed\n        isShiftPressed = event.shiftKey or false\n        window.selectedTracksList.onTrackClicked @model, isShiftPressed\n\n    changeSelectStat: ->\n        if @model.isSelected()\n            @$el.addClass 'success'\n        else\n            @$el.removeClass 'success'\n\n    ##################### END - Manage Select Stat - END #########################\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    tracks_view.coffee                                 :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/20 17:41:32 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/25 19:09:24 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nViewCollection = require '../../../lib/view_collection'\nTrackView = require './track_view'\n\n###\n# TracksView is the structure for put tracks in content view\n###\nmodule.exports = class TracksView extends ViewCollection\n    template: require './templates/tracks'\n    el: '#display-screen'\n\n    itemview: TrackView\n    collectionEl: '#table-items-content'\n\n    events:\n        # Event delegation\n        'click tr.track-row': (e) -> @viewProxy 'onTrackClicked', e\n\n\n\n    initialize: (options) ->\n        super options\n\n        # Event delegation: Take the model send as argument in event and run his\n        # methode named as the second argument\n        @listenTo @collection, 'change', _.partial(@viewProxy, 'refresh')\n        @listenTo @collection, 'toggle-select', _.partial(@viewProxy, 'changeSelectStat')\n\n\n    # Manage event delegation. Events are listen to on the collection level,\n    # then the callback are called on the view that originally triggered them.\n    #\n    # * `methodName` is the method that will be called on the View.\n    # * `object` can be a File model or a DOMElement within FileView.$el\n    viewProxy: (methodName, object) ->\n\n        # Get view's cid. Views are indexed by cid. Object can be a File model\n        # or a DOMElement within FileView.$el.\n        if object.cid?\n            cid = object.cid\n        else\n            cid = @$(object.target).parents('tr').data 'cid'\n\n            unless cid?\n                cid = @$(object.currentTarget).data 'cid'\n\n        # Get the view.\n        view = _.find @views, (view) -> view.model.cid is cid\n\n        # In case of deletion, view may not exist anymore.\n        if view?\n            # Call `methodName` on the related view.\n            args = [].splice.call arguments, 1\n            view[methodName].apply view, args\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div id=\\\"context-menu\\\"></div><div id=\\\"display-screen\\\"></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    content_screen.coffee                              :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/25 09:53:27 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/25 22:14:29 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nContextMenu = require './context_menu'\nSelectedTracksList = require '../collections/selected_list'\nTracksView = require '../views/content/track/tracks_view'\nEditionView = require '../views/content/edition/edition_view'\n\nmodule.exports = class ContentScreen\n\n    skeletonTrack: require './content/track_skel'\n    skeletonEdition: require './content/edition_skel'\n\n    constructor: ->\n        _.extend @, Backbone.Events\n\n        @baseCollection = window.app.baseCollection\n\n        # SelectedTracksList is a collection of all tracks selected by the user,\n        # all acions on tracks must be handle by it\n        @selectedTracksList = new SelectedTracksList\n        @selectedTracksList.baseCollection = @baseCollection\n\n\n        # Listen if a the selection collection in/out of state empty, pop/remove\n        # the action menu\n        @listenTo @selectedTracksList, 'selectionTracksState', @updateSelectionTracksState\n\n        # Set baseCollection, so all tracks as the first collection printed\n        @_collection = @baseCollection\n\n\n    ############################ ALL TRACKS #####################################\n    # Render the context menu, create a view collection of the selectioned\n    # collection and render it\n    renderAllTracks: ->\n        $('#content-screen').append @skeletonTrack\n        # Initialize the contextMenu\n        @_contextMenu = new ContextMenu\n            selectedTracksList: @selectedTracksList\n\n        # Initialize the tracks displayed\n        @_collectionView = new TracksView\n            collection: @baseCollection\n        @_collectionView.render()\n\n        # Listen if the user want edit the selectioned tracks\n        @listenTo @_contextMenu, 'lauchTracksEdition', @lauchTracksEdition\n        @_contextMenu.render()\n\n\n    removeAllTracks: ->\n        @_contextMenu.remove()\n        @_collectionView.remove()\n    ###################### END - ALL TRACKS - END ###############################\n\n\n    updateSelectionTracksState: (isUsed) ->\n        @_contextMenu.manageActionTrackMenu isUsed\n\n    ############################ TRACKS EDITION #################################\n    # Remove current content and lauch edition\n    lauchTracksEdition: ->\n        @_contextMenu.manageActionTrackMenu false\n        @removeAllTracks()\n        @renderTracksEdition()\n\n    renderTracksEdition: ->\n        $('#content-screen').append @skeletonEdition\n        # Initialize the Edition view\n        @editionView = new EditionView\n        # Listen the end of the edition\n        @listenTo @editionView, 'edition-end', @finishEdition\n        @editionView.render()\n\n    finishEdition: ->\n        @removeTracksEdition()\n        @renderAllTracks()\n\n    removeTracksEdition: ->\n        @editionView.remove()\n\n    ###################### END - TRACKS EDITION - END ###########################\n\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    context_menu.coffee                                :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:42 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/25 19:06:57 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../lib/base_view'\n\n\n###\n# Context_menu represent the menu on the top of the app. His goal is to work\n# with tracks_display. It must display the dynamiques option when the user select\n# one or several song in the tracks display.\n###\nmodule.exports = class ContextMenu extends BaseView\n\n    el: '#context-menu'\n    template: require './templates/context_menu'\n\n    # Marquer is the action Menu is active or not\n    trackMenuActive: false\n\n    events:\n        # Event trigger when a user valid the files to upload\n        'change #upload-files': 'lauchUploadFiles'\n        # Lauch Tracks editions\n        'click #edit-tracks': (e) -> @trigger 'lauchTracksEdition'\n\n        # Bouton testing\n        # TODO: delete it\n        'click #fetch': 'fetchBaseCollection'\n\n\n    afterRender: ->\n        @uploader = $('#uploader')\n        @$('#edit-tracks').hide()\n\n    # Testing function\n    # TODO: delete it\n    fetchBaseCollection: ->\n        window.app.baseCollection.fetch()\n\n\n    ################## UPLOAD #########################\n    # Catche all files in the event and send them to the uploadQueue collection\n    lauchUploadFiles: (event) ->\n        files = event.dataTransfert?.files or event.target.files\n        # Debug log ###############################\n        #\n        #console.log 'Files to upload:'\n        #console.log file for file in files\n        #\n        ##########################################\n        if files.length\n            window.app.uploadQueue.addBlobs files\n\n            if event.target?\n                target = $ event.target\n                target.replaceWith target.clone true\n\n    ######################## ACTION TRACKS MENU #################################\n    # Check if the selection list is used or not. If it used the action track\n    # menu pop in the context menu. If it's not used anymore the menu disapear\n    # isUser is a bollean\n    # TODO: improve it\n    manageActionTrackMenu: (isUsed)->\n        if (isUsed == true)\n            @$('#edit-tracks').show()\n        else\n            @$('#edit-tracks').hide()\n\n    ################### END - ACTION TRACKS MENU - END ##########################\n\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    left_menu.coffee                                   :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:30:40 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/26 15:54:39 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../lib/base_view'\n\n###\n# LefMenu represent the main panel option. His goal is trigger the changing\n# of content in the tracks screen\n###\nmodule.exports = class LeftMenu extends BaseView\n\n    template: require './templates/left_menu'\n    tagName: 'div'\n    className: 'left-menu'\n    el: '#left-menu'\n\n    events:\n        'click #menu-playlist-new': 'createNewPlaylist'\n\n    createNewPlaylist: ->\n        console.log 'plop'\n\n\n","# **************************************************************************** #\n#                                                                              #\n#                                                         :::      ::::::::    #\n#    player_screen.coffee                               :+:      :+:    :+:    #\n#                                                     +:+ +:+         +:+      #\n#    By: ppeltier <dev@halium.fr>                   +#+  +:+       +#+         #\n#                                                 +#+#+#+#+#+   +#+            #\n#    Created: 2015/08/18 15:58:59 by ppeltier          #+#    #+#              #\n#    Updated: 2015/08/25 10:16:53 by ppeltier         ###   ########.fr        #\n#                                                                              #\n# **************************************************************************** #\n\nBaseView = require '../lib/base_view'\n\n# Context_menu represent the menu on the top of the app. His goal is to work\n# with tracks_screen. It must display the dynamiques option when the user select\n# one or several song in the tracks screen.\nmodule.exports = class PlayerScreen extends BaseView\n\n    template: require('./templates/player_screen')\n    el: '#player-screen'\n    tagName: 'div'\n    className: 'player-screen'\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<ul class=\\\"nav nav-tabs\\\"><input id=\\\"upload-files\\\" name=\\\"upload-files\\\" type=\\\"file\\\" multiple=\\\"multiple\\\" accept=\\\"audio/*\\\" role=\\\"presentation\\\" class=\\\"btn btn-default btn-file\\\"/><li id=\\\"fetch\\\" role=\\\"presentation\\\" class=\\\"btn btn-default\\\">FETCH</li><li id=\\\"edit-tracks\\\" role=\\\"presentation\\\" class=\\\"btn btn-default\\\">EDIT</li></ul>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div class=\\\"container-fluid\\\"><div id=\\\"left-menu\\\" class=\\\"sidebar\\\"></div><div id=\\\"content-screen\\\" class=\\\"content container-fluid\\\"></div></div><div id=\\\"player-screen\\\" class=\\\"footer player\\\"></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<label for=\\\"menu-section\\\">Section</label><ul id=\\\"menu-section\\\" class=\\\"nav nav-sidebar\\\"><li><a>All Tracks</a></li></ul><label for=\\\"menu-playlist\\\">Playlist</label><ul id=\\\"menu-playlist\\\" class=\\\"nav nav-sidebar\\\"><li><a>Playlist1</a></li><li><a>Playlist2</a></li><li><a>Playlist3</a></li><li id=\\\"menu-playlist-new\\\"><a>Create a Playlist</a></li></ul>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<h1>Player screen</h1>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}"]}